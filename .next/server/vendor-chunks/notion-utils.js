"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "vendor-chunks/notion-utils";
exports.ids = ["vendor-chunks/notion-utils"];
exports.modules = {

/***/ "(rsc)/./node_modules/notion-utils/build/index.js":
/*!**************************************************!*\
  !*** ./node_modules/notion-utils/build/index.js ***!
  \**************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   estimatePageReadTime: () => (/* binding */ oe),\n/* harmony export */   estimatePageReadTimeAsHumanizedString: () => (/* binding */ ct),\n/* harmony export */   formatDate: () => (/* binding */ F),\n/* harmony export */   formatNotionDateTime: () => (/* binding */ rt),\n/* harmony export */   getAllPagesInSpace: () => (/* binding */ Ee),\n/* harmony export */   getBlockCollectionId: () => (/* binding */ w),\n/* harmony export */   getBlockIcon: () => (/* binding */ B),\n/* harmony export */   getBlockParentPage: () => (/* binding */ O),\n/* harmony export */   getBlockTitle: () => (/* binding */ v),\n/* harmony export */   getCanonicalPageId: () => (/* binding */ We),\n/* harmony export */   getDateValue: () => (/* binding */ Y),\n/* harmony export */   getPageBreadcrumbs: () => (/* binding */ je),\n/* harmony export */   getPageContentBlockIds: () => (/* binding */ Te),\n/* harmony export */   getPageImageUrls: () => (/* binding */ Ye),\n/* harmony export */   getPageProperty: () => (/* binding */ P),\n/* harmony export */   getPageTableOfContents: () => (/* binding */ S),\n/* harmony export */   getPageTitle: () => (/* binding */ pe),\n/* harmony export */   getTextContent: () => (/* binding */ h),\n/* harmony export */   idToUuid: () => (/* binding */ L),\n/* harmony export */   isUrl: () => (/* reexport safe */ is_url_superb__WEBPACK_IMPORTED_MODULE_1__[\"default\"]),\n/* harmony export */   mergeRecordMaps: () => (/* binding */ Xe),\n/* harmony export */   normalizeTitle: () => (/* binding */ z),\n/* harmony export */   normalizeUrl: () => (/* binding */ te),\n/* harmony export */   parsePageId: () => (/* binding */ W),\n/* harmony export */   uuidToId: () => (/* binding */ M)\n/* harmony export */ });\n/* harmony import */ var p_queue__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! p-queue */ \"(rsc)/./node_modules/p-queue/dist/index.js\");\n/* harmony import */ var is_url_superb__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! is-url-superb */ \"(rsc)/./node_modules/is-url-superb/index.js\");\n/* harmony import */ var mem__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! mem */ \"(rsc)/./node_modules/mem/dist/index.js\");\n/* harmony import */ var normalize_url__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! normalize-url */ \"(rsc)/./node_modules/notion-utils/node_modules/normalize-url/index.js\");\nvar q = Object.defineProperty, N = Object.defineProperties;\nvar V = Object.getOwnPropertyDescriptors;\nvar $ = Object.getOwnPropertySymbols;\nvar H = Object.prototype.hasOwnProperty, Q = Object.prototype.propertyIsEnumerable;\nvar D = (e, t, o)=>t in e ? q(e, t, {\n        enumerable: !0,\n        configurable: !0,\n        writable: !0,\n        value: o\n    }) : e[t] = o, g = (e, t)=>{\n    for(var o in t || (t = {}))H.call(t, o) && D(e, o, t[o]);\n    if ($) for (var o of $(t))Q.call(t, o) && D(e, o, t[o]);\n    return e;\n}, U = (e, t)=>N(e, V(t));\nvar R = (e, t, o)=>new Promise((n, s)=>{\n        var r = (c)=>{\n            try {\n                m(o.next(c));\n            } catch (l) {\n                s(l);\n            }\n        }, a = (c)=>{\n            try {\n                m(o.throw(c));\n            } catch (l) {\n                s(l);\n            }\n        }, m = (c)=>c.done ? n(c.value) : Promise.resolve(c.value).then(r, a);\n        m((o = o.apply(e, t)).next());\n    });\nvar h = (e)=>{\n    var t;\n    return e ? Array.isArray(e) ? (t = e == null ? void 0 : e.reduce((o, n)=>o + (n[0] !== \"⁍\" && n[0] !== \"‣\" ? n[0] : \"\"), \"\")) != null ? t : \"\" : e : \"\";\n};\nfunction w(e, t) {\n    var s, r, a, m, c, l, i;\n    let o = e.collection_id || ((r = (s = e.format) == null ? void 0 : s.collection_pointer) == null ? void 0 : r.id);\n    if (o) return o;\n    let n = (a = e == null ? void 0 : e.view_ids) == null ? void 0 : a[0];\n    if (n) {\n        let u = (c = (m = t.collection_view) == null ? void 0 : m[n]) == null ? void 0 : c.value;\n        if (u) return (i = (l = u.format) == null ? void 0 : l.collection_pointer) == null ? void 0 : i.id;\n    }\n    return null;\n}\nfunction v(e, t) {\n    var o, n;\n    if ((o = e.properties) != null && o.title) return h(e.properties.title);\n    if (e.type === \"collection_view_page\" || e.type === \"collection_view\") {\n        let s = w(e, t);\n        if (s) {\n            let r = (n = t.collection[s]) == null ? void 0 : n.value;\n            if (r) return h(r.name);\n        }\n    }\n    return \"\";\n}\nfunction B(e, t) {\n    var o, n, s;\n    if ((o = e.format) != null && o.page_icon) return (n = e.format) == null ? void 0 : n.page_icon;\n    if (e.type === \"collection_view_page\" || e.type === \"collection_view\") {\n        let r = w(e, t);\n        if (r) {\n            let a = (s = t.collection[r]) == null ? void 0 : s.value;\n            if (a) return a.icon;\n        }\n    }\n    return null;\n}\nfunction pe(e) {\n    var o;\n    let t = (o = e.block[Object.keys(e.block)[0]]) == null ? void 0 : o.value;\n    return t ? v(t, e) : null;\n}\nfunction P(e, t, o) {\n    var n;\n    try {\n        if (!t.properties || !Object.keys(o.collection)) return null;\n        let s = (n = o.collection[t.parent_id]) == null ? void 0 : n.value;\n        if (s) {\n            let r = e.toLowerCase(), a = Object.keys(s.schema).find((l)=>{\n                var i, u;\n                return ((u = (i = s.schema[l]) == null ? void 0 : i.name) == null ? void 0 : u.toLowerCase()) === r;\n            });\n            if (!a) return null;\n            let { type: m } = s.schema[a], c = h(t.properties[a]);\n            switch(m){\n                case \"created_time\":\n                    return t.created_time;\n                case \"multi_select\":\n                    return c.split(\",\");\n                case \"date\":\n                    {\n                        let i = t.properties[a][0][1][0][1];\n                        if (i.type == \"datetime\") return new Date(`${i.start_date} ${i.start_time}`).getTime();\n                        if (i.type == \"date\") return new Date(i.start_date).getTime();\n                        if (i.type == \"datetimerange\") {\n                            let { start_date: u, start_time: y, end_date: f, end_time: T } = i, b = new Date(`${u} ${y}`).getTime(), d = new Date(`${f} ${T}`).getTime();\n                            return [\n                                b,\n                                d\n                            ];\n                        } else {\n                            let u = new Date(i.start_date).getTime(), y = new Date(i.end_date).getTime();\n                            return [\n                                u,\n                                y\n                            ];\n                        }\n                    }\n                case \"checkbox\":\n                    return c == \"Yes\";\n                case \"last_edited_time\":\n                    return t.last_edited_time;\n                default:\n                    return c;\n            }\n        }\n    } catch (s) {}\n    return null;\n}\nvar Y = (e)=>{\n    if (e && Array.isArray(e)) {\n        if (e[0] === \"d\") return e[1];\n        for (let t of e){\n            let o = Y(t);\n            if (o) return o;\n        }\n    }\n    return null;\n};\nvar O = (e, t, { inclusive: o = !1 } = {})=>{\n    var s, r;\n    let n = e;\n    for(; n != null;){\n        if (o && (n == null ? void 0 : n.type) === \"page\") return n;\n        let a = n.parent_id, m = n.parent_table;\n        if (!a) break;\n        if (m === \"collection\") n = (s = t.collection[a]) == null ? void 0 : s.value;\n        else if (n = (r = t.block[a]) == null ? void 0 : r.value, (n == null ? void 0 : n.type) === \"page\") return n;\n    }\n    return null;\n};\nvar Z = {\n    header: 0,\n    sub_header: 1,\n    sub_sub_header: 2\n}, S = (e, t)=>{\n    var s;\n    let o = ((s = e.content) != null ? s : []).map((r)=>{\n        var m, c;\n        let a = (m = t.block[r]) == null ? void 0 : m.value;\n        if (a) {\n            let { type: l } = a;\n            if (l === \"header\" || l === \"sub_header\" || l === \"sub_sub_header\") return {\n                id: r,\n                type: l,\n                text: h((c = a.properties) == null ? void 0 : c.title),\n                indentLevel: Z[l]\n            };\n        }\n        return null;\n    }).filter(Boolean), n = [\n        {\n            actual: -1,\n            effective: -1\n        }\n    ];\n    for (let r of o){\n        let { indentLevel: a } = r, m = a;\n        do {\n            let c = n[n.length - 1], { actual: l, effective: i } = c;\n            if (m > l) r.indentLevel = i + 1, n.push({\n                actual: m,\n                effective: r.indentLevel\n            });\n            else if (m === l) {\n                r.indentLevel = i;\n                break;\n            } else n.pop();\n        }while (!0);\n    }\n    return o;\n};\nvar Te = (e, t)=>{\n    let o = t || Object.keys(e.block)[0], n = new Set;\n    function s(r) {\n        var u, y, f, T;\n        if (n.has(r)) return;\n        n.add(r);\n        let a = (u = e.block[r]) == null ? void 0 : u.value;\n        if (!a) return;\n        let { content: m, type: c, properties: l, format: i } = a;\n        if (l) for (let b of Object.keys(l)){\n            let d = l[b];\n            d.map((k)=>{\n                var _, I;\n                let p = (I = (_ = k == null ? void 0 : k[0]) == null ? void 0 : _[1]) == null ? void 0 : I[0];\n                (p == null ? void 0 : p[0]) === \"p\" && p[1] && s(p[1]);\n            });\n            let x = (f = (y = d == null ? void 0 : d[0]) == null ? void 0 : y[1]) == null ? void 0 : f[0];\n            (x == null ? void 0 : x[0]) === \"p\" && x[1] && s(x[1]);\n        }\n        if (i) {\n            let b = (T = i.transclusion_reference_pointer) == null ? void 0 : T.id;\n            b && s(b);\n        }\n        if (!(!m || !Array.isArray(m)) && !(r !== o && (c === \"page\" || c === \"collection_view_page\"))) for (let b of m)s(b);\n    }\n    return s(o), Array.from(n);\n};\nvar L = (e = \"\")=>`${e.substr(0, 8)}-${e.substr(8, 4)}-${e.substr(12, 4)}-${e.substr(16, 4)}-${e.substr(20)}`;\nvar G = /\\b([a-f0-9]{32})\\b/, J = /\\b([a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12})\\b/, W = (e = \"\", { uuid: t = !0 } = {})=>{\n    if (!e) return null;\n    e = e.split(\"?\")[0];\n    let o = e.match(G);\n    if (o) return t ? L(o[1]) : o[1];\n    let n = e.match(J);\n    return n ? t ? n[1] : n[1].replace(/-/g, \"\") : null;\n};\nvar M = (e)=>e.replace(/-/g, \"\");\n\nfunction Ee(a, m, c) {\n    return R(this, arguments, function*(e, t, o, { concurrency: n = 4, traverseCollections: s = !0, targetPageId: r = null } = {}) {\n        let l = {}, i = new Set, u = new p_queue__WEBPACK_IMPORTED_MODULE_0__[\"default\"]({\n            concurrency: n\n        });\n        function y(f) {\n            return R(this, null, function*() {\n                r && i.has(r) || (f = W(f), f && !l[f] && !i.has(f) && (i.add(f), u.add(()=>R(this, null, function*() {\n                        var T, b;\n                        try {\n                            if (r && i.has(r) && f !== r) return;\n                            let d = yield o(f);\n                            if (!d) return;\n                            let x = (b = (T = d.block[f]) == null ? void 0 : T.value) == null ? void 0 : b.space_id;\n                            if (x) {\n                                if (!t) t = x;\n                                else if (t !== x) return;\n                            }\n                            if (Object.keys(d.block).filter((k)=>{\n                                var _;\n                                let p = (_ = d.block[k]) == null ? void 0 : _.value;\n                                return !(!p || p.type !== \"page\" && p.type !== \"collection_view_page\" || t && p.space_id && p.space_id !== t);\n                            }).forEach((k)=>y(k)), s) for (let k of Object.values(d.collection_query))for (let p of Object.values(k)){\n                                let { blockIds: _ } = p;\n                                if (_) for (let I of _)y(I);\n                            }\n                            l[f] = d;\n                        } catch (d) {\n                            console.warn(\"page load error\", {\n                                pageId: f,\n                                spaceId: t\n                            }, d.statusCode, d.message), l[f] = null;\n                        }\n                        i.delete(f);\n                    }))));\n            });\n        }\n        return yield y(e), yield u.onIdle(), l;\n    });\n}\nvar z = (e)=>(e || \"\").replace(/ /g, \"-\").replace(/[^a-zA-Z0-9-\\u4e00-\\u9FFF\\u3041-\\u3096\\u30A1-\\u30FC\\u3000-\\u303F]/g, \"\").replace(/--/g, \"-\").replace(/-$/, \"\").replace(/^-/, \"\").trim().toLowerCase();\nvar We = (e, t, { uuid: o = !0 } = {})=>{\n    var r;\n    if (!e || !t) return null;\n    let n = M(e), s = (r = t.block[e]) == null ? void 0 : r.value;\n    if (s) {\n        let a = P(\"slug\", s, t) || P(\"Slug\", s, t) || z(v(s, t));\n        if (a) return o ? `${a}-${n}` : a;\n    }\n    return n;\n};\nvar je = (e, t)=>{\n    var r;\n    let o = e.block, n = [], s = t;\n    do {\n        let a = (r = o[s]) == null ? void 0 : r.value;\n        if (!a) break;\n        let m = v(a, e), c = B(a, e);\n        if (!(m || c)) break;\n        n.push({\n            block: a,\n            active: s === t,\n            pageId: s,\n            title: m,\n            icon: c\n        });\n        let l = O(a, e), i = l == null ? void 0 : l.id;\n        if (!i) break;\n        s = i;\n    }while (!0);\n    return n.reverse(), n;\n};\n\nvar Ye = (e, { mapImageUrl: t })=>{\n    let n = Object.keys(e.block).flatMap((s)=>{\n        var m, c, l, i, u, y, f, T, b, d, x;\n        let r = (m = e.block[s]) == null ? void 0 : m.value, a = [];\n        if (r) {\n            if (r.type === \"image\") {\n                let _ = ((c = e.signed_urls) == null ? void 0 : c[r.id]) || ((u = (i = (l = r.properties) == null ? void 0 : l.source) == null ? void 0 : i[0]) == null ? void 0 : u[0]);\n                _.includes(\"file.notion.so\") && (_ = (T = (f = (y = r.properties) == null ? void 0 : y.source) == null ? void 0 : f[0]) == null ? void 0 : T[0]), _ && a.push({\n                    block: r,\n                    url: _\n                });\n            }\n            if ((b = r.format) != null && b.page_cover) {\n                let p = r.format.page_cover;\n                a.push({\n                    block: r,\n                    url: p\n                });\n            }\n            if ((d = r.format) != null && d.bookmark_cover) {\n                let p = r.format.bookmark_cover;\n                a.push({\n                    block: r,\n                    url: p\n                });\n            }\n            if ((x = r.format) != null && x.bookmark_icon) {\n                let p = r.format.bookmark_icon;\n                a.push({\n                    block: r,\n                    url: p\n                });\n            }\n            let k = B(r, e);\n            k && (0,is_url_superb__WEBPACK_IMPORTED_MODULE_1__[\"default\"])(k) && a.push({\n                block: r,\n                url: k\n            });\n        }\n        return a;\n    }).filter(Boolean).map(({ block: s, url: r })=>t(r, s)).filter(Boolean);\n    return Array.from(new Set(n));\n};\n\n\nvar te = (0,mem__WEBPACK_IMPORTED_MODULE_2__[\"default\"])((e)=>{\n    if (!e) return \"\";\n    try {\n        if (e.startsWith(\"https://www.notion.so/image/\")) {\n            let t = new URL(e), o = decodeURIComponent(t.pathname.substr(7)), n = te(o);\n            t.pathname = `/image/${encodeURIComponent(n)}`, e = t.toString();\n        }\n        return (0,normalize_url__WEBPACK_IMPORTED_MODULE_3__[\"default\"])(e, {\n            stripProtocol: !0,\n            stripWWW: !0,\n            stripHash: !0,\n            stripTextFragment: !0,\n            removeQueryParameters: !0\n        });\n    } catch (t) {\n        return \"\";\n    }\n});\nfunction Xe(e, t) {\n    return {\n        block: g(g({}, e.block), t.block),\n        collection: g(g({}, e.collection), t.collection),\n        collection_view: g(g({}, e.collection_view), t.collection_view),\n        notion_user: g(g({}, e.notion_user), t.notion_user),\n        collection_query: g(g({}, e.collection_query), t.collection_query),\n        signed_urls: g(g({}, e.signed_urls), t.signed_urls),\n        preview_images: g(g({}, e.preview_images), t.preview_images)\n    };\n}\nvar F = (e, { month: t = \"short\" } = {})=>{\n    let o = new Date(e);\n    return `${o.toLocaleString(\"en-US\", {\n        month: t\n    })} ${o.getUTCDate()}, ${o.getUTCFullYear()}`;\n};\nvar rt = (e)=>{\n    let t = `${e.start_time || \"\"} ${e.start_date} ${e.time_zone || \"\"}`;\n    return F(t);\n};\nfunction oe(e, t, { wordsPerMinute: o = 275, imageReadTimeInSeconds: n = 12 } = {}) {\n    let s = C(e, t), r = s.numWords / o, m = (s.numImages > 10 ? s.numImages / 2 * (n + 3) + (s.numImages - 10) * 3 : s.numImages / 2 * (2 * n + (1 - s.numImages))) / 60, c = r + m;\n    return U(g({}, s), {\n        totalWordsReadTimeInMinutes: r,\n        totalImageReadTimeInMinutes: m,\n        totalReadTimeInMinutes: c\n    });\n}\nfunction ct(e, t, o) {\n    let n = oe(e, t, o);\n    return ne(n.totalReadTimeInMinutes);\n}\nfunction C(e, t) {\n    var n, s, r, a;\n    let o = {\n        numWords: 0,\n        numImages: 0\n    };\n    if (!e) return o;\n    for (let m of e.content || []){\n        let c = (n = t.block[m]) == null ? void 0 : n.value, l = !1;\n        if (!!c) {\n            switch(c.type){\n                case \"quote\":\n                case \"alias\":\n                case \"header\":\n                case \"sub_header\":\n                case \"sub_sub_header\":\n                    {\n                        let i = v(c, t);\n                        o.numWords += E(i);\n                        break;\n                    }\n                case \"callout\":\n                case \"toggle\":\n                case \"to_do\":\n                case \"bulleted_list\":\n                case \"numbered_list\":\n                case \"text\":\n                    {\n                        let i = v(c, t);\n                        o.numWords += E(i), l = !0;\n                        break;\n                    }\n                case \"embed\":\n                case \"tweet\":\n                case \"maps\":\n                case \"pdf\":\n                case \"figma\":\n                case \"typeform\":\n                case \"codepen\":\n                case \"excalidraw\":\n                case \"gist\":\n                case \"video\":\n                case \"drive\":\n                case \"audio\":\n                case \"file\":\n                case \"image\":\n                    o.numImages += 1;\n                    break;\n                case \"bookmark\":\n                    o.numImages += .25;\n                    break;\n                case \"code\":\n                    o.numImages += 2;\n                    break;\n                case \"table\":\n                case \"collection_view\":\n                    o.numImages += 2;\n                    break;\n                case \"column\":\n                case \"column_list\":\n                case \"transclusion_container\":\n                    l = !0;\n                    break;\n                case \"table_of_contents\":\n                    {\n                        let i = e;\n                        if (!i) continue;\n                        let u = S(i, t);\n                        for (let y of u)o.numWords += E(y.text);\n                        break;\n                    }\n                case \"transclusion_reference\":\n                    {\n                        let i = (r = (s = c == null ? void 0 : c.format) == null ? void 0 : s.transclusion_reference_pointer) == null ? void 0 : r.id;\n                        if (!i) continue;\n                        let u = (a = t.block[i]) == null ? void 0 : a.value;\n                        u && j(o, C(u, t));\n                        break;\n                    }\n                default:\n                    break;\n            }\n            l && j(o, C(c, t));\n        }\n    }\n    return o;\n}\nfunction j(e, t) {\n    e.numWords += t.numWords, e.numImages += t.numImages;\n}\nfunction E(e) {\n    return e ? (e.match(/\\w+/g) || []).length : 0;\n}\nfunction ne(e) {\n    return e < .5 ? \"less than a minute\" : e < 1.5 ? \"1 minute\" : `${Math.ceil(e)} minutes`;\n}\n //# sourceMappingURL=index.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/notion-utils/build/index.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/notion-utils/node_modules/normalize-url/index.js":
/*!***********************************************************************!*\
  !*** ./node_modules/notion-utils/node_modules/normalize-url/index.js ***!
  \***********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ normalizeUrl)\n/* harmony export */ });\n// https://developer.mozilla.org/en-US/docs/Web/HTTP/Basics_of_HTTP/Data_URIs\nconst DATA_URL_DEFAULT_MIME_TYPE = \"text/plain\";\nconst DATA_URL_DEFAULT_CHARSET = \"us-ascii\";\nconst testParameter = (name, filters)=>filters.some((filter)=>filter instanceof RegExp ? filter.test(name) : filter === name);\nconst normalizeDataURL = (urlString, { stripHash })=>{\n    const match = /^data:(?<type>[^,]*?),(?<data>[^#]*?)(?:#(?<hash>.*))?$/.exec(urlString);\n    if (!match) {\n        throw new Error(`Invalid URL: ${urlString}`);\n    }\n    let { type, data, hash } = match.groups;\n    const mediaType = type.split(\";\");\n    hash = stripHash ? \"\" : hash;\n    let isBase64 = false;\n    if (mediaType[mediaType.length - 1] === \"base64\") {\n        mediaType.pop();\n        isBase64 = true;\n    }\n    // Lowercase MIME type\n    const mimeType = (mediaType.shift() || \"\").toLowerCase();\n    const attributes = mediaType.map((attribute)=>{\n        let [key, value = \"\"] = attribute.split(\"=\").map((string)=>string.trim());\n        // Lowercase `charset`\n        if (key === \"charset\") {\n            value = value.toLowerCase();\n            if (value === DATA_URL_DEFAULT_CHARSET) {\n                return \"\";\n            }\n        }\n        return `${key}${value ? `=${value}` : \"\"}`;\n    }).filter(Boolean);\n    const normalizedMediaType = [\n        ...attributes\n    ];\n    if (isBase64) {\n        normalizedMediaType.push(\"base64\");\n    }\n    if (normalizedMediaType.length > 0 || mimeType && mimeType !== DATA_URL_DEFAULT_MIME_TYPE) {\n        normalizedMediaType.unshift(mimeType);\n    }\n    return `data:${normalizedMediaType.join(\";\")},${isBase64 ? data.trim() : data}${hash ? `#${hash}` : \"\"}`;\n};\nfunction normalizeUrl(urlString, options) {\n    options = {\n        defaultProtocol: \"http:\",\n        normalizeProtocol: true,\n        forceHttp: false,\n        forceHttps: false,\n        stripAuthentication: true,\n        stripHash: false,\n        stripTextFragment: true,\n        stripWWW: true,\n        removeQueryParameters: [\n            /^utm_\\w+/i\n        ],\n        removeTrailingSlash: true,\n        removeSingleSlash: true,\n        removeDirectoryIndex: false,\n        removeExplicitPort: false,\n        sortQueryParameters: true,\n        ...options\n    };\n    urlString = urlString.trim();\n    // Data URL\n    if (/^data:/i.test(urlString)) {\n        return normalizeDataURL(urlString, options);\n    }\n    if (/^view-source:/i.test(urlString)) {\n        throw new Error(\"`view-source:` is not supported as it is a non-standard protocol\");\n    }\n    const hasRelativeProtocol = urlString.startsWith(\"//\");\n    const isRelativeUrl = !hasRelativeProtocol && /^\\.*\\//.test(urlString);\n    // Prepend protocol\n    if (!isRelativeUrl) {\n        urlString = urlString.replace(/^(?!(?:\\w+:)?\\/\\/)|^\\/\\//, options.defaultProtocol);\n    }\n    const urlObject = new URL(urlString);\n    if (options.forceHttp && options.forceHttps) {\n        throw new Error(\"The `forceHttp` and `forceHttps` options cannot be used together\");\n    }\n    if (options.forceHttp && urlObject.protocol === \"https:\") {\n        urlObject.protocol = \"http:\";\n    }\n    if (options.forceHttps && urlObject.protocol === \"http:\") {\n        urlObject.protocol = \"https:\";\n    }\n    // Remove auth\n    if (options.stripAuthentication) {\n        urlObject.username = \"\";\n        urlObject.password = \"\";\n    }\n    // Remove hash\n    if (options.stripHash) {\n        urlObject.hash = \"\";\n    } else if (options.stripTextFragment) {\n        urlObject.hash = urlObject.hash.replace(/#?:~:text.*?$/i, \"\");\n    }\n    // Remove duplicate slashes if not preceded by a protocol\n    // NOTE: This could be implemented using a single negative lookbehind\n    // regex, but we avoid that to maintain compatibility with older js engines\n    // which do not have support for that feature.\n    if (urlObject.pathname) {\n        // TODO: Replace everything below with `urlObject.pathname = urlObject.pathname.replace(/(?<!\\b[a-z][a-z\\d+\\-.]{1,50}:)\\/{2,}/g, '/');` when Safari supports negative lookbehind.\n        // Split the string by occurrences of this protocol regex, and perform\n        // duplicate-slash replacement on the strings between those occurrences\n        // (if any).\n        const protocolRegex = /\\b[a-z][a-z\\d+\\-.]{1,50}:\\/\\//g;\n        let lastIndex = 0;\n        let result = \"\";\n        for(;;){\n            const match = protocolRegex.exec(urlObject.pathname);\n            if (!match) {\n                break;\n            }\n            const protocol = match[0];\n            const protocolAtIndex = match.index;\n            const intermediate = urlObject.pathname.slice(lastIndex, protocolAtIndex);\n            result += intermediate.replace(/\\/{2,}/g, \"/\");\n            result += protocol;\n            lastIndex = protocolAtIndex + protocol.length;\n        }\n        const remnant = urlObject.pathname.slice(lastIndex, urlObject.pathname.length);\n        result += remnant.replace(/\\/{2,}/g, \"/\");\n        urlObject.pathname = result;\n    }\n    // Decode URI octets\n    if (urlObject.pathname) {\n        try {\n            urlObject.pathname = decodeURI(urlObject.pathname);\n        } catch  {}\n    }\n    // Remove directory index\n    if (options.removeDirectoryIndex === true) {\n        options.removeDirectoryIndex = [\n            /^index\\.[a-z]+$/\n        ];\n    }\n    if (Array.isArray(options.removeDirectoryIndex) && options.removeDirectoryIndex.length > 0) {\n        let pathComponents = urlObject.pathname.split(\"/\");\n        const lastComponent = pathComponents[pathComponents.length - 1];\n        if (testParameter(lastComponent, options.removeDirectoryIndex)) {\n            pathComponents = pathComponents.slice(0, -1);\n            urlObject.pathname = pathComponents.slice(1).join(\"/\") + \"/\";\n        }\n    }\n    if (urlObject.hostname) {\n        // Remove trailing dot\n        urlObject.hostname = urlObject.hostname.replace(/\\.$/, \"\");\n        // Remove `www.`\n        if (options.stripWWW && /^www\\.(?!www\\.)[a-z\\-\\d]{1,63}\\.[a-z.\\-\\d]{2,63}$/.test(urlObject.hostname)) {\n            // Each label should be max 63 at length (min: 1).\n            // Source: https://en.wikipedia.org/wiki/Hostname#Restrictions_on_valid_host_names\n            // Each TLD should be up to 63 characters long (min: 2).\n            // It is technically possible to have a single character TLD, but none currently exist.\n            urlObject.hostname = urlObject.hostname.replace(/^www\\./, \"\");\n        }\n    }\n    // Remove query unwanted parameters\n    if (Array.isArray(options.removeQueryParameters)) {\n        // eslint-disable-next-line unicorn/no-useless-spread -- We are intentionally spreading to get a copy.\n        for (const key of [\n            ...urlObject.searchParams.keys()\n        ]){\n            if (testParameter(key, options.removeQueryParameters)) {\n                urlObject.searchParams.delete(key);\n            }\n        }\n    }\n    if (!Array.isArray(options.keepQueryParameters) && options.removeQueryParameters === true) {\n        urlObject.search = \"\";\n    }\n    // Keep wanted query parameters\n    if (Array.isArray(options.keepQueryParameters) && options.keepQueryParameters.length > 0) {\n        // eslint-disable-next-line unicorn/no-useless-spread -- We are intentionally spreading to get a copy.\n        for (const key of [\n            ...urlObject.searchParams.keys()\n        ]){\n            if (!testParameter(key, options.keepQueryParameters)) {\n                urlObject.searchParams.delete(key);\n            }\n        }\n    }\n    // Sort query parameters\n    if (options.sortQueryParameters) {\n        urlObject.searchParams.sort();\n        // Calling `.sort()` encodes the search parameters, so we need to decode them again.\n        try {\n            urlObject.search = decodeURIComponent(urlObject.search);\n        } catch  {}\n    }\n    if (options.removeTrailingSlash) {\n        urlObject.pathname = urlObject.pathname.replace(/\\/$/, \"\");\n    }\n    // Remove an explicit port number, excluding a default port number, if applicable\n    if (options.removeExplicitPort && urlObject.port) {\n        urlObject.port = \"\";\n    }\n    const oldUrlString = urlString;\n    // Take advantage of many of the Node `url` normalizations\n    urlString = urlObject.toString();\n    if (!options.removeSingleSlash && urlObject.pathname === \"/\" && !oldUrlString.endsWith(\"/\") && urlObject.hash === \"\") {\n        urlString = urlString.replace(/\\/$/, \"\");\n    }\n    // Remove ending `/` unless removeSingleSlash is false\n    if ((options.removeTrailingSlash || urlObject.pathname === \"/\") && urlObject.hash === \"\" && options.removeSingleSlash) {\n        urlString = urlString.replace(/\\/$/, \"\");\n    }\n    // Restore relative protocol, if applicable\n    if (hasRelativeProtocol && !options.normalizeProtocol) {\n        urlString = urlString.replace(/^http:\\/\\//, \"//\");\n    }\n    // Remove http/https\n    if (options.stripProtocol) {\n        urlString = urlString.replace(/^(?:https?:)?\\/\\//, \"\");\n    }\n    return urlString;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/notion-utils/node_modules/normalize-url/index.js\n");

/***/ })

};
;