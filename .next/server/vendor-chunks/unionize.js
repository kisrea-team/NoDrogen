"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "vendor-chunks/unionize";
exports.ids = ["vendor-chunks/unionize"];
exports.modules = {

/***/ "(ssr)/./node_modules/unionize/lib/index.js":
/*!********************************************!*\
  !*** ./node_modules/unionize/lib/index.js ***!
  \********************************************/
/***/ (function(__unused_webpack_module, exports) {

eval("\nvar __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nfunction unionize(record, config) {\n    var _a = config || {}, _b = _a.value, valProp = _b === void 0 ? undefined : _b, _c = _a.tag, tagProp = _c === void 0 ? 'tag' : _c;\n    var creators = {};\n    var _loop_1 = function (tag) {\n        creators[tag] = (function (value) {\n            var _a, _b;\n            if (value === void 0) { value = {}; }\n            return valProp ? (_a = {}, _a[tagProp] = tag, _a[valProp] = value, _a) : __assign({}, value, (_b = {}, _b[tagProp] = tag, _b));\n        });\n    };\n    for (var tag in record) {\n        _loop_1(tag);\n    }\n    var is = {};\n    var _loop_2 = function (tag) {\n        is[tag] = (function (variant) { return variant[tagProp] === tag; });\n    };\n    for (var tag in record) {\n        _loop_2(tag);\n    }\n    function evalMatch(variant, cases, defaultCase) {\n        if (defaultCase === void 0) { defaultCase = cases.default; }\n        var handler = cases[variant[tagProp]];\n        return handler ? handler(valProp ? variant[valProp] : variant) : defaultCase(variant);\n    }\n    var match = function (first, second) {\n        return second ? evalMatch(first, second) : function (variant) { return evalMatch(variant, first); };\n    };\n    var identity = function (x) { return x; };\n    var transform = function (first, second) {\n        return second\n            ? evalMatch(first, second, identity)\n            : function (variant) { return evalMatch(variant, first, identity); };\n    };\n    var as = {};\n    var _loop_3 = function (expectedTag) {\n        var _a;\n        as[expectedTag] = match((_a = {},\n            _a[expectedTag] = function (x) { return x; },\n            _a.default = function (val) {\n                throw new Error(\"Attempted to cast \" + val[tagProp] + \" as \" + expectedTag);\n            },\n            _a));\n    };\n    for (var expectedTag in record) {\n        _loop_3(expectedTag);\n    }\n    return Object.assign({\n        is: is,\n        as: as,\n        match: match,\n        transform: transform,\n        _Record: record,\n    }, creators);\n}\nexports.unionize = unionize;\n/**\n * Creates a pseudo-witness of a given type. That is, it pretends to return a value of\n * type `T` for any `T`, but it's really just returning `undefined`. This white lie\n * allows convenient expression of the value types in the record you pass to `unionize`.\n */\nexports.ofType = function () { return undefined; };\nexports[\"default\"] = unionize;\n//# sourceMappingURL=index.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvdW5pb25pemUvbGliL2luZGV4LmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2I7QUFDQTtBQUNBLGlEQUFpRCxPQUFPO0FBQ3hEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7QUFDN0Q7QUFDQSx5QkFBeUI7QUFDekI7QUFDQTtBQUNBO0FBQ0E7QUFDQSxvQ0FBb0M7QUFDcEMscUNBQXFDLDJEQUEyRCxpQkFBaUI7QUFDakgsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHdDQUF3QyxrQ0FBa0M7QUFDMUU7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHNDQUFzQztBQUN0QztBQUNBO0FBQ0E7QUFDQTtBQUNBLHdFQUF3RTtBQUN4RTtBQUNBLGtDQUFrQztBQUNsQztBQUNBO0FBQ0E7QUFDQSxtQ0FBbUM7QUFDbkM7QUFDQTtBQUNBO0FBQ0E7QUFDQSx3Q0FBd0M7QUFDeEMsNkNBQTZDLFdBQVc7QUFDeEQ7QUFDQTtBQUNBLGFBQWE7QUFDYjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0EsZ0JBQWdCO0FBQ2hCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxjQUFjLGlCQUFpQjtBQUMvQixrQkFBZTtBQUNmIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vbm90aW9uLXgtZnVsbC8uL25vZGVfbW9kdWxlcy91bmlvbml6ZS9saWIvaW5kZXguanM/NWVkNyJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbnZhciBfX2Fzc2lnbiA9ICh0aGlzICYmIHRoaXMuX19hc3NpZ24pIHx8IGZ1bmN0aW9uICgpIHtcbiAgICBfX2Fzc2lnbiA9IE9iamVjdC5hc3NpZ24gfHwgZnVuY3Rpb24odCkge1xuICAgICAgICBmb3IgKHZhciBzLCBpID0gMSwgbiA9IGFyZ3VtZW50cy5sZW5ndGg7IGkgPCBuOyBpKyspIHtcbiAgICAgICAgICAgIHMgPSBhcmd1bWVudHNbaV07XG4gICAgICAgICAgICBmb3IgKHZhciBwIGluIHMpIGlmIChPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwocywgcCkpXG4gICAgICAgICAgICAgICAgdFtwXSA9IHNbcF07XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIHQ7XG4gICAgfTtcbiAgICByZXR1cm4gX19hc3NpZ24uYXBwbHkodGhpcywgYXJndW1lbnRzKTtcbn07XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5mdW5jdGlvbiB1bmlvbml6ZShyZWNvcmQsIGNvbmZpZykge1xuICAgIHZhciBfYSA9IGNvbmZpZyB8fCB7fSwgX2IgPSBfYS52YWx1ZSwgdmFsUHJvcCA9IF9iID09PSB2b2lkIDAgPyB1bmRlZmluZWQgOiBfYiwgX2MgPSBfYS50YWcsIHRhZ1Byb3AgPSBfYyA9PT0gdm9pZCAwID8gJ3RhZycgOiBfYztcbiAgICB2YXIgY3JlYXRvcnMgPSB7fTtcbiAgICB2YXIgX2xvb3BfMSA9IGZ1bmN0aW9uICh0YWcpIHtcbiAgICAgICAgY3JlYXRvcnNbdGFnXSA9IChmdW5jdGlvbiAodmFsdWUpIHtcbiAgICAgICAgICAgIHZhciBfYSwgX2I7XG4gICAgICAgICAgICBpZiAodmFsdWUgPT09IHZvaWQgMCkgeyB2YWx1ZSA9IHt9OyB9XG4gICAgICAgICAgICByZXR1cm4gdmFsUHJvcCA/IChfYSA9IHt9LCBfYVt0YWdQcm9wXSA9IHRhZywgX2FbdmFsUHJvcF0gPSB2YWx1ZSwgX2EpIDogX19hc3NpZ24oe30sIHZhbHVlLCAoX2IgPSB7fSwgX2JbdGFnUHJvcF0gPSB0YWcsIF9iKSk7XG4gICAgICAgIH0pO1xuICAgIH07XG4gICAgZm9yICh2YXIgdGFnIGluIHJlY29yZCkge1xuICAgICAgICBfbG9vcF8xKHRhZyk7XG4gICAgfVxuICAgIHZhciBpcyA9IHt9O1xuICAgIHZhciBfbG9vcF8yID0gZnVuY3Rpb24gKHRhZykge1xuICAgICAgICBpc1t0YWddID0gKGZ1bmN0aW9uICh2YXJpYW50KSB7IHJldHVybiB2YXJpYW50W3RhZ1Byb3BdID09PSB0YWc7IH0pO1xuICAgIH07XG4gICAgZm9yICh2YXIgdGFnIGluIHJlY29yZCkge1xuICAgICAgICBfbG9vcF8yKHRhZyk7XG4gICAgfVxuICAgIGZ1bmN0aW9uIGV2YWxNYXRjaCh2YXJpYW50LCBjYXNlcywgZGVmYXVsdENhc2UpIHtcbiAgICAgICAgaWYgKGRlZmF1bHRDYXNlID09PSB2b2lkIDApIHsgZGVmYXVsdENhc2UgPSBjYXNlcy5kZWZhdWx0OyB9XG4gICAgICAgIHZhciBoYW5kbGVyID0gY2FzZXNbdmFyaWFudFt0YWdQcm9wXV07XG4gICAgICAgIHJldHVybiBoYW5kbGVyID8gaGFuZGxlcih2YWxQcm9wID8gdmFyaWFudFt2YWxQcm9wXSA6IHZhcmlhbnQpIDogZGVmYXVsdENhc2UodmFyaWFudCk7XG4gICAgfVxuICAgIHZhciBtYXRjaCA9IGZ1bmN0aW9uIChmaXJzdCwgc2Vjb25kKSB7XG4gICAgICAgIHJldHVybiBzZWNvbmQgPyBldmFsTWF0Y2goZmlyc3QsIHNlY29uZCkgOiBmdW5jdGlvbiAodmFyaWFudCkgeyByZXR1cm4gZXZhbE1hdGNoKHZhcmlhbnQsIGZpcnN0KTsgfTtcbiAgICB9O1xuICAgIHZhciBpZGVudGl0eSA9IGZ1bmN0aW9uICh4KSB7IHJldHVybiB4OyB9O1xuICAgIHZhciB0cmFuc2Zvcm0gPSBmdW5jdGlvbiAoZmlyc3QsIHNlY29uZCkge1xuICAgICAgICByZXR1cm4gc2Vjb25kXG4gICAgICAgICAgICA/IGV2YWxNYXRjaChmaXJzdCwgc2Vjb25kLCBpZGVudGl0eSlcbiAgICAgICAgICAgIDogZnVuY3Rpb24gKHZhcmlhbnQpIHsgcmV0dXJuIGV2YWxNYXRjaCh2YXJpYW50LCBmaXJzdCwgaWRlbnRpdHkpOyB9O1xuICAgIH07XG4gICAgdmFyIGFzID0ge307XG4gICAgdmFyIF9sb29wXzMgPSBmdW5jdGlvbiAoZXhwZWN0ZWRUYWcpIHtcbiAgICAgICAgdmFyIF9hO1xuICAgICAgICBhc1tleHBlY3RlZFRhZ10gPSBtYXRjaCgoX2EgPSB7fSxcbiAgICAgICAgICAgIF9hW2V4cGVjdGVkVGFnXSA9IGZ1bmN0aW9uICh4KSB7IHJldHVybiB4OyB9LFxuICAgICAgICAgICAgX2EuZGVmYXVsdCA9IGZ1bmN0aW9uICh2YWwpIHtcbiAgICAgICAgICAgICAgICB0aHJvdyBuZXcgRXJyb3IoXCJBdHRlbXB0ZWQgdG8gY2FzdCBcIiArIHZhbFt0YWdQcm9wXSArIFwiIGFzIFwiICsgZXhwZWN0ZWRUYWcpO1xuICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIF9hKSk7XG4gICAgfTtcbiAgICBmb3IgKHZhciBleHBlY3RlZFRhZyBpbiByZWNvcmQpIHtcbiAgICAgICAgX2xvb3BfMyhleHBlY3RlZFRhZyk7XG4gICAgfVxuICAgIHJldHVybiBPYmplY3QuYXNzaWduKHtcbiAgICAgICAgaXM6IGlzLFxuICAgICAgICBhczogYXMsXG4gICAgICAgIG1hdGNoOiBtYXRjaCxcbiAgICAgICAgdHJhbnNmb3JtOiB0cmFuc2Zvcm0sXG4gICAgICAgIF9SZWNvcmQ6IHJlY29yZCxcbiAgICB9LCBjcmVhdG9ycyk7XG59XG5leHBvcnRzLnVuaW9uaXplID0gdW5pb25pemU7XG4vKipcbiAqIENyZWF0ZXMgYSBwc2V1ZG8td2l0bmVzcyBvZiBhIGdpdmVuIHR5cGUuIFRoYXQgaXMsIGl0IHByZXRlbmRzIHRvIHJldHVybiBhIHZhbHVlIG9mXG4gKiB0eXBlIGBUYCBmb3IgYW55IGBUYCwgYnV0IGl0J3MgcmVhbGx5IGp1c3QgcmV0dXJuaW5nIGB1bmRlZmluZWRgLiBUaGlzIHdoaXRlIGxpZVxuICogYWxsb3dzIGNvbnZlbmllbnQgZXhwcmVzc2lvbiBvZiB0aGUgdmFsdWUgdHlwZXMgaW4gdGhlIHJlY29yZCB5b3UgcGFzcyB0byBgdW5pb25pemVgLlxuICovXG5leHBvcnRzLm9mVHlwZSA9IGZ1bmN0aW9uICgpIHsgcmV0dXJuIHVuZGVmaW5lZDsgfTtcbmV4cG9ydHMuZGVmYXVsdCA9IHVuaW9uaXplO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9aW5kZXguanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/unionize/lib/index.js\n");

/***/ })

};
;