"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "vendor-chunks/notion-compat";
exports.ids = ["vendor-chunks/notion-compat"];
exports.modules = {

/***/ "(rsc)/./node_modules/notion-compat/build/index.js":
/*!***************************************************!*\
  !*** ./node_modules/notion-compat/build/index.js ***!
  \***************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   NotionCompatAPI: () => (/* binding */ NotionCompatAPI),\n/* harmony export */   convertBlock: () => (/* binding */ convertBlock),\n/* harmony export */   convertColor: () => (/* binding */ convertColor),\n/* harmony export */   convertPage: () => (/* binding */ convertPage),\n/* harmony export */   convertPageBlock: () => (/* binding */ convertPageBlock),\n/* harmony export */   convertRichText: () => (/* binding */ convertRichText),\n/* harmony export */   convertRichTextItem: () => (/* binding */ convertRichTextItem),\n/* harmony export */   convertTime: () => (/* binding */ convertTime)\n/* harmony export */ });\n/* harmony import */ var notion_utils__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! notion-utils */ \"(rsc)/./node_modules/notion-utils/build/index.js\");\n/* harmony import */ var p_queue__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! p-queue */ \"(rsc)/./node_modules/p-queue/dist/index.js\");\n// src/notion-compat-api.ts\n\n\n// src/convert-color.ts\nfunction convertColor(color) {\n    switch(color){\n        case \"green\":\n            return \"teal\";\n        case \"green_background\":\n            return \"teal_background\";\n        default:\n            return color;\n    }\n}\n// src/convert-rich-text.ts\nfunction convertRichText(richText) {\n    return richText.map(convertRichTextItem).filter(Boolean);\n}\nfunction convertRichTextItem(richTextItem) {\n    var _a;\n    const subdecorations = [];\n    if (richTextItem.annotations.bold) {\n        subdecorations.push([\n            \"b\"\n        ]);\n    }\n    if (richTextItem.annotations.italic) {\n        subdecorations.push([\n            \"i\"\n        ]);\n    }\n    if (richTextItem.annotations.strikethrough) {\n        subdecorations.push([\n            \"s\"\n        ]);\n    }\n    if (richTextItem.annotations.underline) {\n        subdecorations.push([\n            \"_\"\n        ]);\n    }\n    if (richTextItem.annotations.code) {\n        subdecorations.push([\n            \"c\"\n        ]);\n    }\n    if (richTextItem.annotations.color !== \"default\") {\n        subdecorations.push([\n            \"h\",\n            convertColor(richTextItem.annotations.color)\n        ]);\n    }\n    const details = richTextItem[richTextItem.type];\n    if (details) {\n        if (details.link) {\n            subdecorations.push([\n                \"a\",\n                details.link.url\n            ]);\n        }\n    }\n    switch(richTextItem.type){\n        case \"text\":\n            {\n                if (subdecorations.length) {\n                    return [\n                        richTextItem.text.content,\n                        subdecorations\n                    ];\n                } else {\n                    return [\n                        richTextItem.text.content\n                    ];\n                }\n            }\n        case \"equation\":\n            if ((_a = richTextItem.equation) == null ? void 0 : _a.expression) {\n                subdecorations.unshift([\n                    \"e\",\n                    richTextItem.equation.expression\n                ]);\n            }\n            return [\n                \"⁍\",\n                subdecorations\n            ];\n        case \"mention\":\n            {\n                const { mention } = richTextItem;\n                if (mention) {\n                    switch(mention.type){\n                        case \"link_preview\":\n                            subdecorations.push([\n                                \"a\",\n                                mention.link_preview.url\n                            ]);\n                            break;\n                        case \"page\":\n                            subdecorations.push([\n                                \"p\",\n                                mention.page.id\n                            ]);\n                            return [\n                                \"‣\",\n                                subdecorations\n                            ];\n                        case \"database\":\n                            subdecorations.push([\n                                \"p\",\n                                mention.database.id\n                            ]);\n                            return [\n                                \"‣\",\n                                subdecorations\n                            ];\n                        case \"date\":\n                            subdecorations.unshift([\n                                \"d\",\n                                {\n                                    type: \"date\",\n                                    start_date: mention.date.start,\n                                    end_date: mention.date.end,\n                                    time_zone: mention.date.time_zone\n                                }\n                            ]);\n                            break;\n                        case \"user\":\n                            subdecorations.push([\n                                \"u\",\n                                mention.user.id\n                            ]);\n                            break;\n                        case \"template_mention\":\n                            break;\n                        default:\n                            break;\n                    }\n                }\n                return [\n                    richTextItem.plain_text,\n                    subdecorations\n                ];\n            }\n        default:\n            return [\n                \"\"\n            ];\n    }\n}\n// src/convert-time.ts\nfunction convertTime(time) {\n    if (time) {\n        try {\n            return new Date(time).getTime();\n        } catch  {}\n    }\n    return void 0;\n}\n// src/convert-block.ts\nfunction convertBlock({ block: partialBlock, children = [], pageMap, blockMap, parentMap }) {\n    var _a, _b, _c, _d, _e, _f, _g, _h, _i, _j, _k, _l;\n    const compatBlock = {\n        id: partialBlock.id\n    };\n    if (children && children.length) {\n        compatBlock.content = children;\n    }\n    const block = partialBlock;\n    if (!block.type) {\n        return compatBlock;\n    }\n    compatBlock.properties = {};\n    compatBlock.format = {};\n    compatBlock.type = block.type;\n    compatBlock.created_time = convertTime(block.created_time);\n    compatBlock.last_edited_time = convertTime(block.last_edited_time);\n    if (block.created_by) {\n        compatBlock.created_by_table = `notion_${block.created_by.object}`;\n        compatBlock.created_by_id = block.created_by.id;\n    }\n    compatBlock.last_edited_by_table = (_a = block.last_edited_by) == null ? void 0 : _a.object;\n    compatBlock.last_edited_by_id = (_b = block.last_edited_by) == null ? void 0 : _b.id;\n    compatBlock.alive = block.archived !== true;\n    if (parentMap) {\n        const parentId = parentMap[block.id];\n        if (parentId) {\n            compatBlock.parent_id = parentId;\n            const parentBlock = blockMap == null ? void 0 : blockMap[parentId];\n            if (parentBlock) {\n                switch(parentBlock.type){\n                    case \"child_database\":\n                        compatBlock.parent_table = \"table\";\n                        break;\n                    case \"child_page\":\n                    default:\n                        compatBlock.parent_table = \"block\";\n                        break;\n                }\n            } else {\n                const parentPage = pageMap == null ? void 0 : pageMap[parentId];\n                if (parentPage) {\n                    compatBlock.parent_table = \"block\";\n                }\n            }\n        }\n    }\n    const blockDetails = block[block.type];\n    if (blockDetails) {\n        if (blockDetails.rich_text) {\n            compatBlock.properties.title = convertRichText(blockDetails.rich_text);\n        }\n        if (blockDetails.color) {\n            compatBlock.format.block_color = convertColor(blockDetails.color);\n        }\n        if (blockDetails.icon) {\n            switch(blockDetails.icon.type){\n                case \"emoji\":\n                    compatBlock.format.page_icon = blockDetails.icon.emoji;\n                    break;\n                case \"external\":\n                    compatBlock.format.page_icon = blockDetails.icon.external.url;\n                    break;\n                case \"file\":\n                    compatBlock.format.page_icon = blockDetails.icon.file.url;\n                    break;\n            }\n        }\n        if (blockDetails.type) {\n            switch(blockDetails.type){\n                case \"external\":\n                    compatBlock.properties.source = [\n                        [\n                            blockDetails.external.url\n                        ]\n                    ];\n                    break;\n                case \"file\":\n                    compatBlock.properties.source = [\n                        [\n                            blockDetails.file.url\n                        ]\n                    ];\n                    break;\n            }\n        }\n    }\n    switch(block.type){\n        case \"paragraph\":\n            compatBlock.type = \"text\";\n            if (!((_d = (_c = block.paragraph) == null ? void 0 : _c.rich_text) == null ? void 0 : _d.length)) {\n                delete compatBlock.properties;\n            }\n            break;\n        case \"heading_1\":\n            compatBlock.type = \"header\";\n            break;\n        case \"heading_2\":\n            compatBlock.type = \"sub_header\";\n            break;\n        case \"heading_3\":\n            compatBlock.type = \"sub_sub_header\";\n            break;\n        case \"bulleted_list_item\":\n            compatBlock.type = \"bulleted_list\";\n            break;\n        case \"numbered_list_item\":\n            compatBlock.type = \"numbered_list\";\n            break;\n        case \"quote\":\n            break;\n        case \"to_do\":\n            if ((_e = block.to_do) == null ? void 0 : _e.checked) {\n                compatBlock.properties.checked = [\n                    [\n                        \"Yes\"\n                    ]\n                ];\n            }\n            break;\n        case \"toggle\":\n            break;\n        case \"code\":\n            if (block.code.language) {\n                compatBlock.properties.language = [\n                    [\n                        block.code.language\n                    ]\n                ];\n            }\n            break;\n        case \"callout\":\n            break;\n        case \"file\":\n            break;\n        case \"divider\":\n            break;\n        case \"breadcrumb\":\n            break;\n        case \"table_of_contents\":\n            break;\n        case \"column_list\":\n            break;\n        case \"column\":\n            break;\n        case \"bookmark\":\n            if (block.bookmark.url) {\n                compatBlock.properties.link = [\n                    [\n                        block.bookmark.url\n                    ]\n                ];\n            }\n            if (block.bookmark.caption) {\n                compatBlock.properties.description = convertRichText(block.bookmark.caption);\n            }\n            break;\n        case \"link_to_page\":\n            compatBlock.type = \"alias\";\n            switch((_f = block.link_to_page) == null ? void 0 : _f.type){\n                case \"page_id\":\n                    compatBlock.format.alias_pointer = {\n                        id: block.link_to_page.page_id,\n                        table: \"block\"\n                    };\n                    break;\n                case \"database_id\":\n                    compatBlock.format.alias_pointer = {\n                        id: block.link_to_page.database_id,\n                        table: \"table\"\n                    };\n                    break;\n            }\n            break;\n        case \"child_page\":\n            {\n                compatBlock.type = \"page\";\n                if (pageMap) {\n                    const page = pageMap[block.id];\n                    if (page) {\n                        if (page.properties.title) {\n                            compatBlock.properties.title = convertRichText(page.properties.title.title);\n                        }\n                        if (page.cover) {\n                            switch(page.cover.type){\n                                case \"external\":\n                                    compatBlock.format.page_cover = page.cover.external.url;\n                                    break;\n                                case \"file\":\n                                    compatBlock.format.page_cover = page.cover.file.url;\n                                    break;\n                            }\n                            compatBlock.format.page_cover_position = 0.5;\n                        }\n                        if (page.icon) {\n                            switch(page.icon.type){\n                                case \"emoji\":\n                                    compatBlock.format.page_icon = page.icon.emoji;\n                                    break;\n                                case \"external\":\n                                    compatBlock.format.page_icon = page.icon.external.url;\n                                    break;\n                                case \"file\":\n                                    compatBlock.format.page_icon = page.icon.file.url;\n                                    break;\n                            }\n                        }\n                        if (page.parent) {\n                            switch(page.parent.type){\n                                case \"workspace\":\n                                    compatBlock.parent_table = \"space\";\n                                    break;\n                                case \"database_id\":\n                                    compatBlock.parent_table = \"table\";\n                                    break;\n                                case \"page_id\":\n                                    compatBlock.parent_table = \"block\";\n                                    break;\n                            }\n                        }\n                    }\n                }\n                if (block.child_page) {\n                    if (block.child_page.title) {\n                        compatBlock.properties.title = [\n                            [\n                                block.child_page.title\n                            ]\n                        ];\n                    }\n                }\n                break;\n            }\n        case \"template\":\n            break;\n        case \"synced_block\":\n            if (block.synced_block.synced_from) {\n                compatBlock.type = \"transclusion_reference\";\n                compatBlock.format.transclusion_reference_pointer = {\n                    id: block.synced_block.synced_from.block_id,\n                    table: \"block\"\n                };\n            } else {\n                compatBlock.type = \"transclusion_container\";\n            }\n            break;\n        case \"equation\":\n            if ((_g = block.equation) == null ? void 0 : _g.expression) {\n                compatBlock.properties.title = [\n                    [\n                        block.equation.expression\n                    ]\n                ];\n            }\n            break;\n        case \"child_database\":\n            break;\n        case \"table\":\n            if (blockDetails.table_width && blockDetails.table_width > 0) {\n                compatBlock.format.table_block_column_order = Array.from({\n                    length: blockDetails.table_width\n                }, (_, i)=>\"\" + i);\n                compatBlock.format.table_block_column_format = compatBlock.format.table_block_column_order.map((order)=>{\n                    return {\n                        [order]: {}\n                    };\n                });\n            }\n            if (blockDetails.has_column_header) {\n                compatBlock.format.table_block_column_header = blockDetails.has_column_header;\n            }\n            if (blockDetails.has_row_header) {\n                compatBlock.format.table_block_row_header = blockDetails.has_row_header;\n            }\n            break;\n        case \"table_row\":\n            compatBlock.properties = {\n                ...(_i = (_h = block.table_row) == null ? void 0 : _h.cells) == null ? void 0 : _i.map((cell)=>convertRichText(cell))\n            };\n            break;\n        case \"pdf\":\n            compatBlock.format.block_page_width = true;\n            compatBlock.format.block_height = \"80vh\";\n            break;\n        case \"video\":\n            {\n                compatBlock.format.block_page_width = true;\n                compatBlock.format.block_aspect_ratio = 0.5620608899297423;\n                try {\n                    const url = (_k = (_j = compatBlock.properties.source) == null ? void 0 : _j[0]) == null ? void 0 : _k[0];\n                    if (!url) break;\n                    const u = new URL(url);\n                    switch(u.hostname){\n                        case \"loom.com\":\n                        case \"www.loom.com\":\n                            u.pathname = u.pathname.replace(/^\\/share\\//i, \"/embed/\");\n                            compatBlock.format.display_source = u.toString();\n                            break;\n                    }\n                } catch  {}\n                break;\n            }\n        case \"embed\":\n            {\n                const url = (_l = block.embed) == null ? void 0 : _l.url;\n                compatBlock.format.block_page_width = true;\n                compatBlock.format.block_height = \"30vh\";\n                if (url) {\n                    compatBlock.properties.source = [\n                        [\n                            url\n                        ]\n                    ];\n                    try {\n                        const u = new URL(url);\n                        switch(u.hostname){\n                            case \"twitter.com\":\n                                compatBlock.type = \"tweet\";\n                                delete compatBlock.format;\n                                break;\n                            case \"maps.google.com\":\n                                compatBlock.type = \"maps\";\n                                break;\n                            case \"excalidraw.com\":\n                                compatBlock.type = \"excalidraw\";\n                                break;\n                            case \"codepen.io\":\n                                compatBlock.type = \"codepen\";\n                                break;\n                            case \"docs.google.com\":\n                            case \"drive.google.com\":\n                                compatBlock.type = \"drive\";\n                                break;\n                            case \"figma.com\":\n                                compatBlock.type = \"figma\";\n                                break;\n                            case \"open.spotify.com\":\n                                if (u.pathname.includes(\"/embed/\") || u.pathname.includes(\"/embed-podcast/\")) {\n                                    break;\n                                }\n                                if (u.pathname.startsWith(\"/playlist/\")) {\n                                    u.pathname = `/embed${u.pathname}`;\n                                } else if (u.pathname.startsWith(\"/episode/\")) {\n                                    u.pathname = `/embed-podcast${u.pathname}`;\n                                }\n                                u.search = \"\";\n                                compatBlock.format.display_source = u.toString();\n                                break;\n                            case \"airtable.com\":\n                                if (!u.pathname.startsWith(\"/embed/\")) {\n                                    u.pathname = `/embed${u.pathname}`;\n                                    compatBlock.format.display_source = u.toString();\n                                }\n                                break;\n                            case \"soundcloud.com\":\n                                break;\n                        }\n                    } catch  {}\n                }\n                break;\n            }\n        case \"image\":\n            break;\n        case \"audio\":\n            break;\n        case \"link_preview\":\n            break;\n        case \"unsupported\":\n            break;\n    }\n    return compatBlock;\n}\n// src/convert-page.ts\nfunction convertPage({ pageId, blockMap, blockChildrenMap, pageMap, parentMap }) {\n    const compatBlocks = Object.values(blockMap).map((block)=>convertBlock({\n            block,\n            children: blockChildrenMap[block.id],\n            pageMap,\n            blockMap,\n            parentMap\n        }));\n    const compatPageBlock = convertPageBlock({\n        pageId,\n        blockMap,\n        blockChildrenMap,\n        pageMap,\n        parentMap\n    });\n    const compatPageBlocks = Object.keys(pageMap).filter((id)=>id !== pageId).map((id)=>convertPageBlock({\n            pageId: id,\n            blockMap,\n            blockChildrenMap,\n            pageMap,\n            parentMap\n        }));\n    const compatBlockMap = [\n        compatPageBlock,\n        ...compatBlocks,\n        ...compatPageBlocks\n    ].reduce((blockMap2, block)=>({\n            ...blockMap2,\n            [block.id]: {\n                type: \"reader\",\n                value: block\n            }\n        }), {});\n    return {\n        block: compatBlockMap,\n        collection: {},\n        collection_view: {},\n        collection_query: {},\n        signed_urls: {},\n        notion_user: {}\n    };\n}\nfunction convertPageBlock({ pageId, blockMap, blockChildrenMap, pageMap, parentMap }) {\n    const partialPage = pageMap[pageId];\n    const page = partialPage;\n    if (page) {\n        const compatPageBlock = convertBlock({\n            block: {\n                ...page,\n                type: \"child_page\"\n            },\n            children: blockChildrenMap[page.id],\n            pageMap,\n            blockMap,\n            parentMap\n        });\n        return compatPageBlock;\n    }\n    return null;\n}\n// src/notion-compat-api.ts\nvar NotionCompatAPI = class {\n    constructor(client){\n        this.client = client;\n    }\n    async getPage(rawPageId) {\n        const pageId = (0,notion_utils__WEBPACK_IMPORTED_MODULE_1__.parsePageId)(rawPageId);\n        const [page, block, children] = await Promise.all([\n            this.client.pages.retrieve({\n                page_id: pageId\n            }),\n            this.client.blocks.retrieve({\n                block_id: pageId\n            }),\n            this.getAllBlockChildren(pageId)\n        ]);\n        const { blockMap, blockChildrenMap, pageMap, parentMap } = await this.resolvePage(pageId);\n        const recordMap = convertPage({\n            pageId,\n            blockMap,\n            blockChildrenMap,\n            pageMap,\n            parentMap\n        });\n        recordMap.raw = {\n            page,\n            block,\n            children\n        };\n        return recordMap;\n    }\n    async resolvePage(rootBlockId, { concurrency = 4 } = {}) {\n        const blockMap = {};\n        const pageMap = {};\n        const parentMap = {};\n        const blockChildrenMap = {};\n        const pendingBlockIds = /* @__PURE__ */ new Set();\n        const queue = new p_queue__WEBPACK_IMPORTED_MODULE_0__[\"default\"]({\n            concurrency\n        });\n        const processBlock = async (blockId, { shallow = false } = {})=>{\n            if (!blockId || pendingBlockIds.has(blockId)) {\n                return;\n            }\n            pendingBlockIds.add(blockId);\n            queue.add(async ()=>{\n                var _a, _b, _c;\n                try {\n                    let partialBlock = blockMap[blockId];\n                    if (!partialBlock) {\n                        partialBlock = await this.client.blocks.retrieve({\n                            block_id: blockId\n                        });\n                        blockMap[blockId] = partialBlock;\n                    }\n                    const block = partialBlock;\n                    if (block.type === \"child_page\") {\n                        if (!pageMap[blockId]) {\n                            const partialPage = await this.client.pages.retrieve({\n                                page_id: blockId\n                            });\n                            pageMap[blockId] = partialPage;\n                            const page = partialPage;\n                            switch((_a = page.parent) == null ? void 0 : _a.type){\n                                case \"page_id\":\n                                    processBlock(page.parent.page_id, {\n                                        shallow: true\n                                    });\n                                    if (!parentMap[blockId]) {\n                                        parentMap[blockId] = page.parent.page_id;\n                                    }\n                                    break;\n                                case \"database_id\":\n                                    processBlock(page.parent.database_id, {\n                                        shallow: true\n                                    });\n                                    if (!parentMap[blockId]) {\n                                        parentMap[blockId] = page.parent.database_id;\n                                    }\n                                    break;\n                            }\n                        }\n                        if (blockId !== rootBlockId) {\n                            return;\n                        }\n                    }\n                    if (shallow) {\n                        return;\n                    }\n                    const children = await this.getAllBlockChildren(blockId);\n                    blockChildrenMap[blockId] = children.map((child)=>child.id);\n                    for (const child of children){\n                        const childBlock = child;\n                        const mappedChildBlock = blockMap[child.id];\n                        if (!mappedChildBlock || !mappedChildBlock.type && childBlock.type) {\n                            blockMap[child.id] = childBlock;\n                            parentMap[child.id] = blockId;\n                            const details = childBlock[childBlock.type];\n                            if (details == null ? void 0 : details.rich_text) {\n                                const richTextMentions = details.rich_text.filter((richTextItem)=>richTextItem.type === \"mention\");\n                                for (const richTextMention of richTextMentions){\n                                    switch((_b = richTextMention.mention) == null ? void 0 : _b.type){\n                                        case \"page\":\n                                            {\n                                                const pageId = richTextMention.mention.page.id;\n                                                processBlock(pageId, {\n                                                    shallow: true\n                                                });\n                                                break;\n                                            }\n                                        case \"database\":\n                                            {\n                                                const databaseId = richTextMention.mention.database.id;\n                                                processBlock(databaseId, {\n                                                    shallow: true\n                                                });\n                                                break;\n                                            }\n                                    }\n                                }\n                            }\n                            if (childBlock.type === \"link_to_page\") {\n                                switch((_c = childBlock.link_to_page) == null ? void 0 : _c.type){\n                                    case \"page_id\":\n                                        processBlock(childBlock.link_to_page.page_id, {\n                                            shallow: true\n                                        });\n                                        break;\n                                    case \"database_id\":\n                                        processBlock(childBlock.link_to_page.database_id, {\n                                            shallow: true\n                                        });\n                                        break;\n                                }\n                            }\n                            if (childBlock.has_children && childBlock.type !== \"child_database\") {\n                                processBlock(childBlock.id);\n                            }\n                        }\n                    }\n                } catch (err) {\n                    console.warn(\"failed resolving block\", blockId, err.message);\n                } finally{\n                    pendingBlockIds.delete(blockId);\n                }\n            });\n        };\n        await processBlock(rootBlockId);\n        await queue.onIdle();\n        return {\n            blockMap,\n            blockChildrenMap,\n            pageMap,\n            parentMap\n        };\n    }\n    async getAllBlockChildren(blockId) {\n        let blocks = [];\n        let cursor;\n        do {\n            console.log(\"blocks.children.list\", {\n                blockId,\n                cursor\n            });\n            const res = await this.client.blocks.children.list({\n                block_id: blockId,\n                start_cursor: cursor\n            });\n            blocks = blocks.concat(res.results);\n            cursor = res.next_cursor;\n        }while (cursor);\n        return blocks;\n    }\n};\n //# sourceMappingURL=index.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/notion-compat/build/index.js\n");

/***/ })

};
;