"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "vendor-chunks/get-stream";
exports.ids = ["vendor-chunks/get-stream"];
exports.modules = {

/***/ "(rsc)/./node_modules/get-stream/buffer-stream.js":
/*!**************************************************!*\
  !*** ./node_modules/get-stream/buffer-stream.js ***!
  \**************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("\nconst { PassThrough: PassThroughStream } = __webpack_require__(/*! stream */ \"stream\");\nmodule.exports = (options)=>{\n    options = {\n        ...options\n    };\n    const { array } = options;\n    let { encoding } = options;\n    const isBuffer = encoding === \"buffer\";\n    let objectMode = false;\n    if (array) {\n        objectMode = !(encoding || isBuffer);\n    } else {\n        encoding = encoding || \"utf8\";\n    }\n    if (isBuffer) {\n        encoding = null;\n    }\n    const stream = new PassThroughStream({\n        objectMode\n    });\n    if (encoding) {\n        stream.setEncoding(encoding);\n    }\n    let length = 0;\n    const chunks = [];\n    stream.on(\"data\", (chunk)=>{\n        chunks.push(chunk);\n        if (objectMode) {\n            length = chunks.length;\n        } else {\n            length += chunk.length;\n        }\n    });\n    stream.getBufferedValue = ()=>{\n        if (array) {\n            return chunks;\n        }\n        return isBuffer ? Buffer.concat(chunks, length) : chunks.join(\"\");\n    };\n    stream.getBufferedLength = ()=>length;\n    return stream;\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvZ2V0LXN0cmVhbS9idWZmZXItc3RyZWFtLmpzIiwibWFwcGluZ3MiOiJBQUFBO0FBQ0EsTUFBTSxFQUFDQSxhQUFhQyxpQkFBaUIsRUFBQyxHQUFHQyxtQkFBT0EsQ0FBQztBQUVqREMsT0FBT0MsT0FBTyxHQUFHQyxDQUFBQTtJQUNoQkEsVUFBVTtRQUFDLEdBQUdBLE9BQU87SUFBQTtJQUVyQixNQUFNLEVBQUNDLEtBQUssRUFBQyxHQUFHRDtJQUNoQixJQUFJLEVBQUNFLFFBQVEsRUFBQyxHQUFHRjtJQUNqQixNQUFNRyxXQUFXRCxhQUFhO0lBQzlCLElBQUlFLGFBQWE7SUFFakIsSUFBSUgsT0FBTztRQUNWRyxhQUFhLENBQUVGLENBQUFBLFlBQVlDLFFBQU87SUFDbkMsT0FBTztRQUNORCxXQUFXQSxZQUFZO0lBQ3hCO0lBRUEsSUFBSUMsVUFBVTtRQUNiRCxXQUFXO0lBQ1o7SUFFQSxNQUFNRyxTQUFTLElBQUlULGtCQUFrQjtRQUFDUTtJQUFVO0lBRWhELElBQUlGLFVBQVU7UUFDYkcsT0FBT0MsV0FBVyxDQUFDSjtJQUNwQjtJQUVBLElBQUlLLFNBQVM7SUFDYixNQUFNQyxTQUFTLEVBQUU7SUFFakJILE9BQU9JLEVBQUUsQ0FBQyxRQUFRQyxDQUFBQTtRQUNqQkYsT0FBT0csSUFBSSxDQUFDRDtRQUVaLElBQUlOLFlBQVk7WUFDZkcsU0FBU0MsT0FBT0QsTUFBTTtRQUN2QixPQUFPO1lBQ05BLFVBQVVHLE1BQU1ILE1BQU07UUFDdkI7SUFDRDtJQUVBRixPQUFPTyxnQkFBZ0IsR0FBRztRQUN6QixJQUFJWCxPQUFPO1lBQ1YsT0FBT087UUFDUjtRQUVBLE9BQU9MLFdBQVdVLE9BQU9DLE1BQU0sQ0FBQ04sUUFBUUQsVUFBVUMsT0FBT08sSUFBSSxDQUFDO0lBQy9EO0lBRUFWLE9BQU9XLGlCQUFpQixHQUFHLElBQU1UO0lBRWpDLE9BQU9GO0FBQ1IiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9ub3Rpb24teC1leGFtcGxlLWZ1bGwvLi9ub2RlX21vZHVsZXMvZ2V0LXN0cmVhbS9idWZmZXItc3RyZWFtLmpzP2E0ZDEiXSwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBzdHJpY3QnO1xuY29uc3Qge1Bhc3NUaHJvdWdoOiBQYXNzVGhyb3VnaFN0cmVhbX0gPSByZXF1aXJlKCdzdHJlYW0nKTtcblxubW9kdWxlLmV4cG9ydHMgPSBvcHRpb25zID0+IHtcblx0b3B0aW9ucyA9IHsuLi5vcHRpb25zfTtcblxuXHRjb25zdCB7YXJyYXl9ID0gb3B0aW9ucztcblx0bGV0IHtlbmNvZGluZ30gPSBvcHRpb25zO1xuXHRjb25zdCBpc0J1ZmZlciA9IGVuY29kaW5nID09PSAnYnVmZmVyJztcblx0bGV0IG9iamVjdE1vZGUgPSBmYWxzZTtcblxuXHRpZiAoYXJyYXkpIHtcblx0XHRvYmplY3RNb2RlID0gIShlbmNvZGluZyB8fCBpc0J1ZmZlcik7XG5cdH0gZWxzZSB7XG5cdFx0ZW5jb2RpbmcgPSBlbmNvZGluZyB8fCAndXRmOCc7XG5cdH1cblxuXHRpZiAoaXNCdWZmZXIpIHtcblx0XHRlbmNvZGluZyA9IG51bGw7XG5cdH1cblxuXHRjb25zdCBzdHJlYW0gPSBuZXcgUGFzc1Rocm91Z2hTdHJlYW0oe29iamVjdE1vZGV9KTtcblxuXHRpZiAoZW5jb2RpbmcpIHtcblx0XHRzdHJlYW0uc2V0RW5jb2RpbmcoZW5jb2RpbmcpO1xuXHR9XG5cblx0bGV0IGxlbmd0aCA9IDA7XG5cdGNvbnN0IGNodW5rcyA9IFtdO1xuXG5cdHN0cmVhbS5vbignZGF0YScsIGNodW5rID0+IHtcblx0XHRjaHVua3MucHVzaChjaHVuayk7XG5cblx0XHRpZiAob2JqZWN0TW9kZSkge1xuXHRcdFx0bGVuZ3RoID0gY2h1bmtzLmxlbmd0aDtcblx0XHR9IGVsc2Uge1xuXHRcdFx0bGVuZ3RoICs9IGNodW5rLmxlbmd0aDtcblx0XHR9XG5cdH0pO1xuXG5cdHN0cmVhbS5nZXRCdWZmZXJlZFZhbHVlID0gKCkgPT4ge1xuXHRcdGlmIChhcnJheSkge1xuXHRcdFx0cmV0dXJuIGNodW5rcztcblx0XHR9XG5cblx0XHRyZXR1cm4gaXNCdWZmZXIgPyBCdWZmZXIuY29uY2F0KGNodW5rcywgbGVuZ3RoKSA6IGNodW5rcy5qb2luKCcnKTtcblx0fTtcblxuXHRzdHJlYW0uZ2V0QnVmZmVyZWRMZW5ndGggPSAoKSA9PiBsZW5ndGg7XG5cblx0cmV0dXJuIHN0cmVhbTtcbn07XG4iXSwibmFtZXMiOlsiUGFzc1Rocm91Z2giLCJQYXNzVGhyb3VnaFN0cmVhbSIsInJlcXVpcmUiLCJtb2R1bGUiLCJleHBvcnRzIiwib3B0aW9ucyIsImFycmF5IiwiZW5jb2RpbmciLCJpc0J1ZmZlciIsIm9iamVjdE1vZGUiLCJzdHJlYW0iLCJzZXRFbmNvZGluZyIsImxlbmd0aCIsImNodW5rcyIsIm9uIiwiY2h1bmsiLCJwdXNoIiwiZ2V0QnVmZmVyZWRWYWx1ZSIsIkJ1ZmZlciIsImNvbmNhdCIsImpvaW4iLCJnZXRCdWZmZXJlZExlbmd0aCJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/get-stream/buffer-stream.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/get-stream/index.js":
/*!******************************************!*\
  !*** ./node_modules/get-stream/index.js ***!
  \******************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("\nconst { constants: BufferConstants } = __webpack_require__(/*! buffer */ \"buffer\");\nconst stream = __webpack_require__(/*! stream */ \"stream\");\nconst { promisify } = __webpack_require__(/*! util */ \"util\");\nconst bufferStream = __webpack_require__(/*! ./buffer-stream */ \"(rsc)/./node_modules/get-stream/buffer-stream.js\");\nconst streamPipelinePromisified = promisify(stream.pipeline);\nclass MaxBufferError extends Error {\n    constructor(){\n        super(\"maxBuffer exceeded\");\n        this.name = \"MaxBufferError\";\n    }\n}\nasync function getStream(inputStream, options) {\n    if (!inputStream) {\n        throw new Error(\"Expected a stream\");\n    }\n    options = {\n        maxBuffer: Infinity,\n        ...options\n    };\n    const { maxBuffer } = options;\n    const stream = bufferStream(options);\n    await new Promise((resolve, reject)=>{\n        const rejectPromise = (error)=>{\n            // Don't retrieve an oversized buffer.\n            if (error && stream.getBufferedLength() <= BufferConstants.MAX_LENGTH) {\n                error.bufferedData = stream.getBufferedValue();\n            }\n            reject(error);\n        };\n        (async ()=>{\n            try {\n                await streamPipelinePromisified(inputStream, stream);\n                resolve();\n            } catch (error) {\n                rejectPromise(error);\n            }\n        })();\n        stream.on(\"data\", ()=>{\n            if (stream.getBufferedLength() > maxBuffer) {\n                rejectPromise(new MaxBufferError());\n            }\n        });\n    });\n    return stream.getBufferedValue();\n}\nmodule.exports = getStream;\nmodule.exports.buffer = (stream, options)=>getStream(stream, {\n        ...options,\n        encoding: \"buffer\"\n    });\nmodule.exports.array = (stream, options)=>getStream(stream, {\n        ...options,\n        array: true\n    });\nmodule.exports.MaxBufferError = MaxBufferError;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvZ2V0LXN0cmVhbS9pbmRleC5qcyIsIm1hcHBpbmdzIjoiQUFBQTtBQUNBLE1BQU0sRUFBQ0EsV0FBV0MsZUFBZSxFQUFDLEdBQUdDLG1CQUFPQSxDQUFDO0FBQzdDLE1BQU1DLFNBQVNELG1CQUFPQSxDQUFDO0FBQ3ZCLE1BQU0sRUFBQ0UsU0FBUyxFQUFDLEdBQUdGLG1CQUFPQSxDQUFDO0FBQzVCLE1BQU1HLGVBQWVILG1CQUFPQSxDQUFDO0FBRTdCLE1BQU1JLDRCQUE0QkYsVUFBVUQsT0FBT0ksUUFBUTtBQUUzRCxNQUFNQyx1QkFBdUJDO0lBQzVCQyxhQUFjO1FBQ2IsS0FBSyxDQUFDO1FBQ04sSUFBSSxDQUFDQyxJQUFJLEdBQUc7SUFDYjtBQUNEO0FBRUEsZUFBZUMsVUFBVUMsV0FBVyxFQUFFQyxPQUFPO0lBQzVDLElBQUksQ0FBQ0QsYUFBYTtRQUNqQixNQUFNLElBQUlKLE1BQU07SUFDakI7SUFFQUssVUFBVTtRQUNUQyxXQUFXQztRQUNYLEdBQUdGLE9BQU87SUFDWDtJQUVBLE1BQU0sRUFBQ0MsU0FBUyxFQUFDLEdBQUdEO0lBQ3BCLE1BQU1YLFNBQVNFLGFBQWFTO0lBRTVCLE1BQU0sSUFBSUcsUUFBUSxDQUFDQyxTQUFTQztRQUMzQixNQUFNQyxnQkFBZ0JDLENBQUFBO1lBQ3JCLHNDQUFzQztZQUN0QyxJQUFJQSxTQUFTbEIsT0FBT21CLGlCQUFpQixNQUFNckIsZ0JBQWdCc0IsVUFBVSxFQUFFO2dCQUN0RUYsTUFBTUcsWUFBWSxHQUFHckIsT0FBT3NCLGdCQUFnQjtZQUM3QztZQUVBTixPQUFPRTtRQUNSO1FBRUM7WUFDQSxJQUFJO2dCQUNILE1BQU1mLDBCQUEwQk8sYUFBYVY7Z0JBQzdDZTtZQUNELEVBQUUsT0FBT0csT0FBTztnQkFDZkQsY0FBY0M7WUFDZjtRQUNEO1FBRUFsQixPQUFPdUIsRUFBRSxDQUFDLFFBQVE7WUFDakIsSUFBSXZCLE9BQU9tQixpQkFBaUIsS0FBS1AsV0FBVztnQkFDM0NLLGNBQWMsSUFBSVo7WUFDbkI7UUFDRDtJQUNEO0lBRUEsT0FBT0wsT0FBT3NCLGdCQUFnQjtBQUMvQjtBQUVBRSxPQUFPQyxPQUFPLEdBQUdoQjtBQUNqQmUscUJBQXFCLEdBQUcsQ0FBQ3hCLFFBQVFXLFVBQVlGLFVBQVVULFFBQVE7UUFBQyxHQUFHVyxPQUFPO1FBQUVnQixVQUFVO0lBQVE7QUFDOUZILG9CQUFvQixHQUFHLENBQUN4QixRQUFRVyxVQUFZRixVQUFVVCxRQUFRO1FBQUMsR0FBR1csT0FBTztRQUFFaUIsT0FBTztJQUFJO0FBQ3RGSiw2QkFBNkIsR0FBR25CIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vbm90aW9uLXgtZXhhbXBsZS1mdWxsLy4vbm9kZV9tb2R1bGVzL2dldC1zdHJlYW0vaW5kZXguanM/OWE1MCJdLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCc7XG5jb25zdCB7Y29uc3RhbnRzOiBCdWZmZXJDb25zdGFudHN9ID0gcmVxdWlyZSgnYnVmZmVyJyk7XG5jb25zdCBzdHJlYW0gPSByZXF1aXJlKCdzdHJlYW0nKTtcbmNvbnN0IHtwcm9taXNpZnl9ID0gcmVxdWlyZSgndXRpbCcpO1xuY29uc3QgYnVmZmVyU3RyZWFtID0gcmVxdWlyZSgnLi9idWZmZXItc3RyZWFtJyk7XG5cbmNvbnN0IHN0cmVhbVBpcGVsaW5lUHJvbWlzaWZpZWQgPSBwcm9taXNpZnkoc3RyZWFtLnBpcGVsaW5lKTtcblxuY2xhc3MgTWF4QnVmZmVyRXJyb3IgZXh0ZW5kcyBFcnJvciB7XG5cdGNvbnN0cnVjdG9yKCkge1xuXHRcdHN1cGVyKCdtYXhCdWZmZXIgZXhjZWVkZWQnKTtcblx0XHR0aGlzLm5hbWUgPSAnTWF4QnVmZmVyRXJyb3InO1xuXHR9XG59XG5cbmFzeW5jIGZ1bmN0aW9uIGdldFN0cmVhbShpbnB1dFN0cmVhbSwgb3B0aW9ucykge1xuXHRpZiAoIWlucHV0U3RyZWFtKSB7XG5cdFx0dGhyb3cgbmV3IEVycm9yKCdFeHBlY3RlZCBhIHN0cmVhbScpO1xuXHR9XG5cblx0b3B0aW9ucyA9IHtcblx0XHRtYXhCdWZmZXI6IEluZmluaXR5LFxuXHRcdC4uLm9wdGlvbnNcblx0fTtcblxuXHRjb25zdCB7bWF4QnVmZmVyfSA9IG9wdGlvbnM7XG5cdGNvbnN0IHN0cmVhbSA9IGJ1ZmZlclN0cmVhbShvcHRpb25zKTtcblxuXHRhd2FpdCBuZXcgUHJvbWlzZSgocmVzb2x2ZSwgcmVqZWN0KSA9PiB7XG5cdFx0Y29uc3QgcmVqZWN0UHJvbWlzZSA9IGVycm9yID0+IHtcblx0XHRcdC8vIERvbid0IHJldHJpZXZlIGFuIG92ZXJzaXplZCBidWZmZXIuXG5cdFx0XHRpZiAoZXJyb3IgJiYgc3RyZWFtLmdldEJ1ZmZlcmVkTGVuZ3RoKCkgPD0gQnVmZmVyQ29uc3RhbnRzLk1BWF9MRU5HVEgpIHtcblx0XHRcdFx0ZXJyb3IuYnVmZmVyZWREYXRhID0gc3RyZWFtLmdldEJ1ZmZlcmVkVmFsdWUoKTtcblx0XHRcdH1cblxuXHRcdFx0cmVqZWN0KGVycm9yKTtcblx0XHR9O1xuXG5cdFx0KGFzeW5jICgpID0+IHtcblx0XHRcdHRyeSB7XG5cdFx0XHRcdGF3YWl0IHN0cmVhbVBpcGVsaW5lUHJvbWlzaWZpZWQoaW5wdXRTdHJlYW0sIHN0cmVhbSk7XG5cdFx0XHRcdHJlc29sdmUoKTtcblx0XHRcdH0gY2F0Y2ggKGVycm9yKSB7XG5cdFx0XHRcdHJlamVjdFByb21pc2UoZXJyb3IpO1xuXHRcdFx0fVxuXHRcdH0pKCk7XG5cblx0XHRzdHJlYW0ub24oJ2RhdGEnLCAoKSA9PiB7XG5cdFx0XHRpZiAoc3RyZWFtLmdldEJ1ZmZlcmVkTGVuZ3RoKCkgPiBtYXhCdWZmZXIpIHtcblx0XHRcdFx0cmVqZWN0UHJvbWlzZShuZXcgTWF4QnVmZmVyRXJyb3IoKSk7XG5cdFx0XHR9XG5cdFx0fSk7XG5cdH0pO1xuXG5cdHJldHVybiBzdHJlYW0uZ2V0QnVmZmVyZWRWYWx1ZSgpO1xufVxuXG5tb2R1bGUuZXhwb3J0cyA9IGdldFN0cmVhbTtcbm1vZHVsZS5leHBvcnRzLmJ1ZmZlciA9IChzdHJlYW0sIG9wdGlvbnMpID0+IGdldFN0cmVhbShzdHJlYW0sIHsuLi5vcHRpb25zLCBlbmNvZGluZzogJ2J1ZmZlcid9KTtcbm1vZHVsZS5leHBvcnRzLmFycmF5ID0gKHN0cmVhbSwgb3B0aW9ucykgPT4gZ2V0U3RyZWFtKHN0cmVhbSwgey4uLm9wdGlvbnMsIGFycmF5OiB0cnVlfSk7XG5tb2R1bGUuZXhwb3J0cy5NYXhCdWZmZXJFcnJvciA9IE1heEJ1ZmZlckVycm9yO1xuIl0sIm5hbWVzIjpbImNvbnN0YW50cyIsIkJ1ZmZlckNvbnN0YW50cyIsInJlcXVpcmUiLCJzdHJlYW0iLCJwcm9taXNpZnkiLCJidWZmZXJTdHJlYW0iLCJzdHJlYW1QaXBlbGluZVByb21pc2lmaWVkIiwicGlwZWxpbmUiLCJNYXhCdWZmZXJFcnJvciIsIkVycm9yIiwiY29uc3RydWN0b3IiLCJuYW1lIiwiZ2V0U3RyZWFtIiwiaW5wdXRTdHJlYW0iLCJvcHRpb25zIiwibWF4QnVmZmVyIiwiSW5maW5pdHkiLCJQcm9taXNlIiwicmVzb2x2ZSIsInJlamVjdCIsInJlamVjdFByb21pc2UiLCJlcnJvciIsImdldEJ1ZmZlcmVkTGVuZ3RoIiwiTUFYX0xFTkdUSCIsImJ1ZmZlcmVkRGF0YSIsImdldEJ1ZmZlcmVkVmFsdWUiLCJvbiIsIm1vZHVsZSIsImV4cG9ydHMiLCJidWZmZXIiLCJlbmNvZGluZyIsImFycmF5Il0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/get-stream/index.js\n");

/***/ })

};
;