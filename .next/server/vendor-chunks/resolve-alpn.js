"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "vendor-chunks/resolve-alpn";
exports.ids = ["vendor-chunks/resolve-alpn"];
exports.modules = {

/***/ "(rsc)/./node_modules/resolve-alpn/index.js":
/*!********************************************!*\
  !*** ./node_modules/resolve-alpn/index.js ***!
  \********************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("\nconst tls = __webpack_require__(/*! tls */ \"tls\");\nmodule.exports = (options = {}, connect = tls.connect)=>new Promise((resolve, reject)=>{\n        let timeout = false;\n        let socket;\n        const callback = async ()=>{\n            await socketPromise;\n            socket.off(\"timeout\", onTimeout);\n            socket.off(\"error\", reject);\n            if (options.resolveSocket) {\n                resolve({\n                    alpnProtocol: socket.alpnProtocol,\n                    socket,\n                    timeout\n                });\n                if (timeout) {\n                    await Promise.resolve();\n                    socket.emit(\"timeout\");\n                }\n            } else {\n                socket.destroy();\n                resolve({\n                    alpnProtocol: socket.alpnProtocol,\n                    timeout\n                });\n            }\n        };\n        const onTimeout = async ()=>{\n            timeout = true;\n            callback();\n        };\n        const socketPromise = (async ()=>{\n            try {\n                socket = await connect(options, callback);\n                socket.on(\"error\", reject);\n                socket.once(\"timeout\", onTimeout);\n            } catch (error) {\n                reject(error);\n            }\n        })();\n    });\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvcmVzb2x2ZS1hbHBuL2luZGV4LmpzIiwibWFwcGluZ3MiOiJBQUFBO0FBQ0EsTUFBTUEsTUFBTUMsbUJBQU9BLENBQUM7QUFFcEJDLE9BQU9DLE9BQU8sR0FBRyxDQUFDQyxVQUFVLENBQUMsQ0FBQyxFQUFFQyxVQUFVTCxJQUFJSyxPQUFPLEdBQUssSUFBSUMsUUFBUSxDQUFDQyxTQUFTQztRQUMvRSxJQUFJQyxVQUFVO1FBRWQsSUFBSUM7UUFFSixNQUFNQyxXQUFXO1lBQ2hCLE1BQU1DO1lBRU5GLE9BQU9HLEdBQUcsQ0FBQyxXQUFXQztZQUN0QkosT0FBT0csR0FBRyxDQUFDLFNBQVNMO1lBRXBCLElBQUlKLFFBQVFXLGFBQWEsRUFBRTtnQkFDMUJSLFFBQVE7b0JBQUNTLGNBQWNOLE9BQU9NLFlBQVk7b0JBQUVOO29CQUFRRDtnQkFBTztnQkFFM0QsSUFBSUEsU0FBUztvQkFDWixNQUFNSCxRQUFRQyxPQUFPO29CQUNyQkcsT0FBT08sSUFBSSxDQUFDO2dCQUNiO1lBQ0QsT0FBTztnQkFDTlAsT0FBT1EsT0FBTztnQkFDZFgsUUFBUTtvQkFBQ1MsY0FBY04sT0FBT00sWUFBWTtvQkFBRVA7Z0JBQU87WUFDcEQ7UUFDRDtRQUVBLE1BQU1LLFlBQVk7WUFDakJMLFVBQVU7WUFDVkU7UUFDRDtRQUVBLE1BQU1DLGdCQUFnQixDQUFDO1lBQ3RCLElBQUk7Z0JBQ0hGLFNBQVMsTUFBTUwsUUFBUUQsU0FBU087Z0JBRWhDRCxPQUFPUyxFQUFFLENBQUMsU0FBU1g7Z0JBQ25CRSxPQUFPVSxJQUFJLENBQUMsV0FBV047WUFDeEIsRUFBRSxPQUFPTyxPQUFPO2dCQUNmYixPQUFPYTtZQUNSO1FBQ0Q7SUFDRCIsInNvdXJjZXMiOlsid2VicGFjazovL25vdGlvbi14LWV4YW1wbGUtZnVsbC8uL25vZGVfbW9kdWxlcy9yZXNvbHZlLWFscG4vaW5kZXguanM/YWRjMyJdLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCc7XG5jb25zdCB0bHMgPSByZXF1aXJlKCd0bHMnKTtcblxubW9kdWxlLmV4cG9ydHMgPSAob3B0aW9ucyA9IHt9LCBjb25uZWN0ID0gdGxzLmNvbm5lY3QpID0+IG5ldyBQcm9taXNlKChyZXNvbHZlLCByZWplY3QpID0+IHtcblx0bGV0IHRpbWVvdXQgPSBmYWxzZTtcblxuXHRsZXQgc29ja2V0O1xuXG5cdGNvbnN0IGNhbGxiYWNrID0gYXN5bmMgKCkgPT4ge1xuXHRcdGF3YWl0IHNvY2tldFByb21pc2U7XG5cblx0XHRzb2NrZXQub2ZmKCd0aW1lb3V0Jywgb25UaW1lb3V0KTtcblx0XHRzb2NrZXQub2ZmKCdlcnJvcicsIHJlamVjdCk7XG5cblx0XHRpZiAob3B0aW9ucy5yZXNvbHZlU29ja2V0KSB7XG5cdFx0XHRyZXNvbHZlKHthbHBuUHJvdG9jb2w6IHNvY2tldC5hbHBuUHJvdG9jb2wsIHNvY2tldCwgdGltZW91dH0pO1xuXG5cdFx0XHRpZiAodGltZW91dCkge1xuXHRcdFx0XHRhd2FpdCBQcm9taXNlLnJlc29sdmUoKTtcblx0XHRcdFx0c29ja2V0LmVtaXQoJ3RpbWVvdXQnKTtcblx0XHRcdH1cblx0XHR9IGVsc2Uge1xuXHRcdFx0c29ja2V0LmRlc3Ryb3koKTtcblx0XHRcdHJlc29sdmUoe2FscG5Qcm90b2NvbDogc29ja2V0LmFscG5Qcm90b2NvbCwgdGltZW91dH0pO1xuXHRcdH1cblx0fTtcblxuXHRjb25zdCBvblRpbWVvdXQgPSBhc3luYyAoKSA9PiB7XG5cdFx0dGltZW91dCA9IHRydWU7XG5cdFx0Y2FsbGJhY2soKTtcblx0fTtcblxuXHRjb25zdCBzb2NrZXRQcm9taXNlID0gKGFzeW5jICgpID0+IHtcblx0XHR0cnkge1xuXHRcdFx0c29ja2V0ID0gYXdhaXQgY29ubmVjdChvcHRpb25zLCBjYWxsYmFjayk7XG5cblx0XHRcdHNvY2tldC5vbignZXJyb3InLCByZWplY3QpO1xuXHRcdFx0c29ja2V0Lm9uY2UoJ3RpbWVvdXQnLCBvblRpbWVvdXQpO1xuXHRcdH0gY2F0Y2ggKGVycm9yKSB7XG5cdFx0XHRyZWplY3QoZXJyb3IpO1xuXHRcdH1cblx0fSkoKTtcbn0pO1xuIl0sIm5hbWVzIjpbInRscyIsInJlcXVpcmUiLCJtb2R1bGUiLCJleHBvcnRzIiwib3B0aW9ucyIsImNvbm5lY3QiLCJQcm9taXNlIiwicmVzb2x2ZSIsInJlamVjdCIsInRpbWVvdXQiLCJzb2NrZXQiLCJjYWxsYmFjayIsInNvY2tldFByb21pc2UiLCJvZmYiLCJvblRpbWVvdXQiLCJyZXNvbHZlU29ja2V0IiwiYWxwblByb3RvY29sIiwiZW1pdCIsImRlc3Ryb3kiLCJvbiIsIm9uY2UiLCJlcnJvciJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/resolve-alpn/index.js\n");

/***/ })

};
;