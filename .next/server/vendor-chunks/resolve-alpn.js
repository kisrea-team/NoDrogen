"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "vendor-chunks/resolve-alpn";
exports.ids = ["vendor-chunks/resolve-alpn"];
exports.modules = {

/***/ "(rsc)/./node_modules/resolve-alpn/index.js":
/*!********************************************!*\
  !*** ./node_modules/resolve-alpn/index.js ***!
  \********************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("\nconst tls = __webpack_require__(/*! tls */ \"tls\");\nmodule.exports = (options = {}, connect = tls.connect)=>new Promise((resolve, reject)=>{\n        let timeout = false;\n        let socket;\n        const callback = async ()=>{\n            await socketPromise;\n            socket.off(\"timeout\", onTimeout);\n            socket.off(\"error\", reject);\n            if (options.resolveSocket) {\n                resolve({\n                    alpnProtocol: socket.alpnProtocol,\n                    socket,\n                    timeout\n                });\n                if (timeout) {\n                    await Promise.resolve();\n                    socket.emit(\"timeout\");\n                }\n            } else {\n                socket.destroy();\n                resolve({\n                    alpnProtocol: socket.alpnProtocol,\n                    timeout\n                });\n            }\n        };\n        const onTimeout = async ()=>{\n            timeout = true;\n            callback();\n        };\n        const socketPromise = (async ()=>{\n            try {\n                socket = await connect(options, callback);\n                socket.on(\"error\", reject);\n                socket.once(\"timeout\", onTimeout);\n            } catch (error) {\n                reject(error);\n            }\n        })();\n    });\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvcmVzb2x2ZS1hbHBuL2luZGV4LmpzIiwibWFwcGluZ3MiOiJBQUFBO0FBQ0EsTUFBTUEsTUFBTUMsbUJBQU9BLENBQUM7QUFFcEJDLE9BQU9DLE9BQU8sR0FBRyxDQUFDQyxVQUFVLENBQUMsQ0FBQyxFQUFFQyxVQUFVTCxJQUFJSyxPQUFPLEdBQUssSUFBSUMsUUFBUSxDQUFDQyxTQUFTQztRQUMvRSxJQUFJQyxVQUFVO1FBRWQsSUFBSUM7UUFFSixNQUFNQyxXQUFXO1lBQ2hCLE1BQU1DO1lBRU5GLE9BQU9HLEdBQUcsQ0FBQyxXQUFXQztZQUN0QkosT0FBT0csR0FBRyxDQUFDLFNBQVNMO1lBRXBCLElBQUlKLFFBQVFXLGFBQWEsRUFBRTtnQkFDMUJSLFFBQVE7b0JBQUNTLGNBQWNOLE9BQU9NLFlBQVk7b0JBQUVOO29CQUFRRDtnQkFBTztnQkFFM0QsSUFBSUEsU0FBUztvQkFDWixNQUFNSCxRQUFRQyxPQUFPO29CQUNyQkcsT0FBT08sSUFBSSxDQUFDO2dCQUNiO1lBQ0QsT0FBTztnQkFDTlAsT0FBT1EsT0FBTztnQkFDZFgsUUFBUTtvQkFBQ1MsY0FBY04sT0FBT00sWUFBWTtvQkFBRVA7Z0JBQU87WUFDcEQ7UUFDRDtRQUVBLE1BQU1LLFlBQVk7WUFDakJMLFVBQVU7WUFDVkU7UUFDRDtRQUVBLE1BQU1DLGdCQUFnQixDQUFDO1lBQ3RCLElBQUk7Z0JBQ0hGLFNBQVMsTUFBTUwsUUFBUUQsU0FBU087Z0JBRWhDRCxPQUFPUyxFQUFFLENBQUMsU0FBU1g7Z0JBQ25CRSxPQUFPVSxJQUFJLENBQUMsV0FBV047WUFDeEIsRUFBRSxPQUFPTyxPQUFPO2dCQUNmYixPQUFPYTtZQUNSO1FBQ0Q7SUFDRCIsInNvdXJjZXMiOlsid2VicGFjazovL25vdGlvbi14LWZ1bGwvLi9ub2RlX21vZHVsZXMvcmVzb2x2ZS1hbHBuL2luZGV4LmpzP2FkYzMiXSwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBzdHJpY3QnO1xuY29uc3QgdGxzID0gcmVxdWlyZSgndGxzJyk7XG5cbm1vZHVsZS5leHBvcnRzID0gKG9wdGlvbnMgPSB7fSwgY29ubmVjdCA9IHRscy5jb25uZWN0KSA9PiBuZXcgUHJvbWlzZSgocmVzb2x2ZSwgcmVqZWN0KSA9PiB7XG5cdGxldCB0aW1lb3V0ID0gZmFsc2U7XG5cblx0bGV0IHNvY2tldDtcblxuXHRjb25zdCBjYWxsYmFjayA9IGFzeW5jICgpID0+IHtcblx0XHRhd2FpdCBzb2NrZXRQcm9taXNlO1xuXG5cdFx0c29ja2V0Lm9mZigndGltZW91dCcsIG9uVGltZW91dCk7XG5cdFx0c29ja2V0Lm9mZignZXJyb3InLCByZWplY3QpO1xuXG5cdFx0aWYgKG9wdGlvbnMucmVzb2x2ZVNvY2tldCkge1xuXHRcdFx0cmVzb2x2ZSh7YWxwblByb3RvY29sOiBzb2NrZXQuYWxwblByb3RvY29sLCBzb2NrZXQsIHRpbWVvdXR9KTtcblxuXHRcdFx0aWYgKHRpbWVvdXQpIHtcblx0XHRcdFx0YXdhaXQgUHJvbWlzZS5yZXNvbHZlKCk7XG5cdFx0XHRcdHNvY2tldC5lbWl0KCd0aW1lb3V0Jyk7XG5cdFx0XHR9XG5cdFx0fSBlbHNlIHtcblx0XHRcdHNvY2tldC5kZXN0cm95KCk7XG5cdFx0XHRyZXNvbHZlKHthbHBuUHJvdG9jb2w6IHNvY2tldC5hbHBuUHJvdG9jb2wsIHRpbWVvdXR9KTtcblx0XHR9XG5cdH07XG5cblx0Y29uc3Qgb25UaW1lb3V0ID0gYXN5bmMgKCkgPT4ge1xuXHRcdHRpbWVvdXQgPSB0cnVlO1xuXHRcdGNhbGxiYWNrKCk7XG5cdH07XG5cblx0Y29uc3Qgc29ja2V0UHJvbWlzZSA9IChhc3luYyAoKSA9PiB7XG5cdFx0dHJ5IHtcblx0XHRcdHNvY2tldCA9IGF3YWl0IGNvbm5lY3Qob3B0aW9ucywgY2FsbGJhY2spO1xuXG5cdFx0XHRzb2NrZXQub24oJ2Vycm9yJywgcmVqZWN0KTtcblx0XHRcdHNvY2tldC5vbmNlKCd0aW1lb3V0Jywgb25UaW1lb3V0KTtcblx0XHR9IGNhdGNoIChlcnJvcikge1xuXHRcdFx0cmVqZWN0KGVycm9yKTtcblx0XHR9XG5cdH0pKCk7XG59KTtcbiJdLCJuYW1lcyI6WyJ0bHMiLCJyZXF1aXJlIiwibW9kdWxlIiwiZXhwb3J0cyIsIm9wdGlvbnMiLCJjb25uZWN0IiwiUHJvbWlzZSIsInJlc29sdmUiLCJyZWplY3QiLCJ0aW1lb3V0Iiwic29ja2V0IiwiY2FsbGJhY2siLCJzb2NrZXRQcm9taXNlIiwib2ZmIiwib25UaW1lb3V0IiwicmVzb2x2ZVNvY2tldCIsImFscG5Qcm90b2NvbCIsImVtaXQiLCJkZXN0cm95Iiwib24iLCJvbmNlIiwiZXJyb3IiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/resolve-alpn/index.js\n");

/***/ })

};
;