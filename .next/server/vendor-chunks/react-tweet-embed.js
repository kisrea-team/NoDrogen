"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "vendor-chunks/react-tweet-embed";
exports.ids = ["vendor-chunks/react-tweet-embed"];
exports.modules = {

/***/ "(ssr)/./node_modules/react-tweet-embed/dist/tweet-embed.es.js":
/*!***************************************************************!*\
  !*** ./node_modules/react-tweet-embed/dist/tweet-embed.es.js ***!
  \***************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ G)\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"(ssr)/./node_modules/next/dist/server/future/route-modules/app-page/vendored/ssr/react.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);\nfunction t(){return t=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var r=arguments[t];for(var n in r)Object.prototype.hasOwnProperty.call(r,n)&&(e[n]=r[n])}return e},t.apply(this,arguments)}function r(e,t){return r=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e},r(e,t)}function n(e){var t={exports:{}};return e(t,t.exports),t.exports}var o=\"function\"==typeof Symbol&&Symbol.for,a=o?Symbol.for(\"react.element\"):60103,i=o?Symbol.for(\"react.portal\"):60106,c=o?Symbol.for(\"react.fragment\"):60107,u=o?Symbol.for(\"react.strict_mode\"):60108,s=o?Symbol.for(\"react.profiler\"):60114,f=o?Symbol.for(\"react.provider\"):60109,p=o?Symbol.for(\"react.context\"):60110,l=o?Symbol.for(\"react.async_mode\"):60111,y=o?Symbol.for(\"react.concurrent_mode\"):60111,d=o?Symbol.for(\"react.forward_ref\"):60112,m=o?Symbol.for(\"react.suspense\"):60113,b=o?Symbol.for(\"react.suspense_list\"):60120,v=o?Symbol.for(\"react.memo\"):60115,h=o?Symbol.for(\"react.lazy\"):60116,g=o?Symbol.for(\"react.block\"):60121,w=o?Symbol.for(\"react.fundamental\"):60117,S=o?Symbol.for(\"react.responder\"):60118,O=o?Symbol.for(\"react.scope\"):60119;function E(e){if(\"object\"==typeof e&&null!==e){var t=e.$$typeof;switch(t){case a:switch(e=e.type){case l:case y:case c:case s:case u:case m:return e;default:switch(e=e&&e.$$typeof){case p:case d:case h:case v:case f:return e;default:return t}}case i:return t}}}function j(e){return E(e)===y}var x={AsyncMode:l,ConcurrentMode:y,ContextConsumer:p,ContextProvider:f,Element:a,ForwardRef:d,Fragment:c,Lazy:h,Memo:v,Portal:i,Profiler:s,StrictMode:u,Suspense:m,isAsyncMode:function(e){return j(e)||E(e)===l},isConcurrentMode:j,isContextConsumer:function(e){return E(e)===p},isContextProvider:function(e){return E(e)===f},isElement:function(e){return\"object\"==typeof e&&null!==e&&e.$$typeof===a},isForwardRef:function(e){return E(e)===d},isFragment:function(e){return E(e)===c},isLazy:function(e){return E(e)===h},isMemo:function(e){return E(e)===v},isPortal:function(e){return E(e)===i},isProfiler:function(e){return E(e)===s},isStrictMode:function(e){return E(e)===u},isSuspense:function(e){return E(e)===m},isValidElementType:function(e){return\"string\"==typeof e||\"function\"==typeof e||e===c||e===y||e===s||e===u||e===m||e===b||\"object\"==typeof e&&null!==e&&(e.$$typeof===h||e.$$typeof===v||e.$$typeof===f||e.$$typeof===p||e.$$typeof===d||e.$$typeof===w||e.$$typeof===S||e.$$typeof===O||e.$$typeof===g)},typeOf:E},T=n(function(e,t){ true&&function(){var e=\"function\"==typeof Symbol&&Symbol.for,r=e?Symbol.for(\"react.element\"):60103,n=e?Symbol.for(\"react.portal\"):60106,o=e?Symbol.for(\"react.fragment\"):60107,a=e?Symbol.for(\"react.strict_mode\"):60108,i=e?Symbol.for(\"react.profiler\"):60114,c=e?Symbol.for(\"react.provider\"):60109,u=e?Symbol.for(\"react.context\"):60110,s=e?Symbol.for(\"react.async_mode\"):60111,f=e?Symbol.for(\"react.concurrent_mode\"):60111,p=e?Symbol.for(\"react.forward_ref\"):60112,l=e?Symbol.for(\"react.suspense\"):60113,y=e?Symbol.for(\"react.suspense_list\"):60120,d=e?Symbol.for(\"react.memo\"):60115,m=e?Symbol.for(\"react.lazy\"):60116,b=e?Symbol.for(\"react.block\"):60121,v=e?Symbol.for(\"react.fundamental\"):60117,h=e?Symbol.for(\"react.responder\"):60118,g=e?Symbol.for(\"react.scope\"):60119;function w(e){if(\"object\"==typeof e&&null!==e){var t=e.$$typeof;switch(t){case r:var y=e.type;switch(y){case s:case f:case o:case i:case a:case l:return y;default:var b=y&&y.$$typeof;switch(b){case u:case p:case m:case d:case c:return b;default:return t}}case n:return t}}}var S=f,O=u,E=c,j=r,x=p,T=o,$=m,P=d,_=n,I=i,C=a,N=l,k=!1;function R(e){return w(e)===f}t.AsyncMode=s,t.ConcurrentMode=S,t.ContextConsumer=O,t.ContextProvider=E,t.Element=j,t.ForwardRef=x,t.Fragment=T,t.Lazy=$,t.Memo=P,t.Portal=_,t.Profiler=I,t.StrictMode=C,t.Suspense=N,t.isAsyncMode=function(e){return k||(k=!0,console.warn(\"The ReactIs.isAsyncMode() alias has been deprecated, and will be removed in React 17+. Update your code to use ReactIs.isConcurrentMode() instead. It has the exact same API.\")),R(e)||w(e)===s},t.isConcurrentMode=R,t.isContextConsumer=function(e){return w(e)===u},t.isContextProvider=function(e){return w(e)===c},t.isElement=function(e){return\"object\"==typeof e&&null!==e&&e.$$typeof===r},t.isForwardRef=function(e){return w(e)===p},t.isFragment=function(e){return w(e)===o},t.isLazy=function(e){return w(e)===m},t.isMemo=function(e){return w(e)===d},t.isPortal=function(e){return w(e)===n},t.isProfiler=function(e){return w(e)===i},t.isStrictMode=function(e){return w(e)===a},t.isSuspense=function(e){return w(e)===l},t.isValidElementType=function(e){return\"string\"==typeof e||\"function\"==typeof e||e===o||e===f||e===i||e===a||e===l||e===y||\"object\"==typeof e&&null!==e&&(e.$$typeof===m||e.$$typeof===d||e.$$typeof===c||e.$$typeof===u||e.$$typeof===p||e.$$typeof===v||e.$$typeof===h||e.$$typeof===g||e.$$typeof===b)},t.typeOf=w}()}),$=n(function(e){e.exports= false?0:T}),P=Object.getOwnPropertySymbols,_=Object.prototype.hasOwnProperty,I=Object.prototype.propertyIsEnumerable;function C(e){if(null==e)throw new TypeError(\"Object.assign cannot be called with null or undefined\");return Object(e)}var N=function(){try{if(!Object.assign)return!1;var e=new String(\"abc\");if(e[5]=\"de\",\"5\"===Object.getOwnPropertyNames(e)[0])return!1;for(var t={},r=0;r<10;r++)t[\"_\"+String.fromCharCode(r)]=r;var n=Object.getOwnPropertyNames(t).map(function(e){return t[e]});if(\"0123456789\"!==n.join(\"\"))return!1;var o={};return\"abcdefghijklmnopqrst\".split(\"\").forEach(function(e){o[e]=e}),\"abcdefghijklmnopqrst\"===Object.keys(Object.assign({},o)).join(\"\")}catch(e){return!1}}()?Object.assign:function(e,t){for(var r,n,o=C(e),a=1;a<arguments.length;a++){for(var i in r=Object(arguments[a]))_.call(r,i)&&(o[i]=r[i]);if(P){n=P(r);for(var c=0;c<n.length;c++)I.call(r,n[c])&&(o[n[c]]=r[n[c]])}}return o},k=Function.call.bind(Object.prototype.hasOwnProperty),R=\"SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED\",A=k,M=function(){};if(true){var L=R,V={},F=A;M=function(e){var t=\"Warning: \"+e;\"undefined\"!=typeof console&&console.error(t);try{throw new Error(t)}catch(e){}}}function D(e,t,r,n,o){if(true)for(var a in e)if(F(e,a)){var i;try{if(\"function\"!=typeof e[a]){var c=Error((n||\"React class\")+\": \"+r+\" type `\"+a+\"` is invalid; it must be a function, usually from the `prop-types` package, but received `\"+typeof e[a]+\"`.This often happens because of typos such as `PropTypes.function` instead of `PropTypes.func`.\");throw c.name=\"Invariant Violation\",c}i=e[a](t,a,n,r,null,L)}catch(e){i=e}if(!i||i instanceof Error||M((n||\"React class\")+\": type specification of \"+r+\" `\"+a+\"` is invalid; the type checker function must return `null` or an `Error` but returned a \"+typeof i+\". You may have forgotten to pass an argument to the type checker creator (arrayOf, instanceOf, objectOf, oneOf, oneOfType, and shape all require an argument).\"),i instanceof Error&&!(i.message in V)){V[i.message]=!0;var u=o?o():\"\";M(\"Failed \"+r+\" type: \"+i.message+(null!=u?u:\"\"))}}}D.resetWarningCache=function(){ true&&(V={})};var W=D,z=function(){};function q(){return null}function U(){}function J(){} true&&(z=function(e){var t=\"Warning: \"+e;\"undefined\"!=typeof console&&console.error(t);try{throw new Error(t)}catch(e){}}),J.resetWarningCache=U;var B=n(function(e){e.exports= true?function(e,t){var r=\"function\"==typeof Symbol&&Symbol.iterator,n=\"<<anonymous>>\",o={array:u(\"array\"),bigint:u(\"bigint\"),bool:u(\"boolean\"),func:u(\"function\"),number:u(\"number\"),object:u(\"object\"),string:u(\"string\"),symbol:u(\"symbol\"),any:c(q),arrayOf:function(e){return c(function(t,r,n,o,a){if(\"function\"!=typeof e)return new i(\"Property `\"+a+\"` of component `\"+n+\"` has invalid PropType notation inside arrayOf.\");var c=t[r];if(!Array.isArray(c))return new i(\"Invalid \"+o+\" `\"+a+\"` of type `\"+p(c)+\"` supplied to `\"+n+\"`, expected an array.\");for(var u=0;u<c.length;u++){var s=e(c,u,n,o,a+\"[\"+u+\"]\",R);if(s instanceof Error)return s}return null})},element:c(function(t,r,n,o,a){var c=t[r];return e(c)?null:new i(\"Invalid \"+o+\" `\"+a+\"` of type `\"+p(c)+\"` supplied to `\"+n+\"`, expected a single ReactElement.\")}),elementType:c(function(e,t,r,n,o){var a=e[t];return $.isValidElementType(a)?null:new i(\"Invalid \"+n+\" `\"+o+\"` of type `\"+p(a)+\"` supplied to `\"+r+\"`, expected a single ReactElement type.\")}),instanceOf:function(e){return c(function(t,r,o,a,c){return t[r]instanceof e?null:new i(\"Invalid \"+a+\" `\"+c+\"` of type `\"+((u=t[r]).constructor&&u.constructor.name?u.constructor.name:n)+\"` supplied to `\"+o+\"`, expected instance of `\"+(e.name||n)+\"`.\");var u})},node:c(function(e,t,r,n,o){return f(e[t])?null:new i(\"Invalid \"+n+\" `\"+o+\"` supplied to `\"+r+\"`, expected a ReactNode.\")}),objectOf:function(e){return c(function(t,r,n,o,a){if(\"function\"!=typeof e)return new i(\"Property `\"+a+\"` of component `\"+n+\"` has invalid PropType notation inside objectOf.\");var c=t[r],u=p(c);if(\"object\"!==u)return new i(\"Invalid \"+o+\" `\"+a+\"` of type `\"+u+\"` supplied to `\"+n+\"`, expected an object.\");for(var s in c)if(A(c,s)){var f=e(c,s,n,o,a+\".\"+s,R);if(f instanceof Error)return f}return null})},oneOf:function(e){if(!Array.isArray(e))return true&&z(arguments.length>1?\"Invalid arguments supplied to oneOf, expected an array, got \"+arguments.length+\" arguments. A common mistake is to write oneOf(x, y, z) instead of oneOf([x, y, z]).\":\"Invalid argument supplied to oneOf, expected an array.\"),q;function t(t,r,n,o,c){for(var u=t[r],s=0;s<e.length;s++)if(a(u,e[s]))return null;var f=JSON.stringify(e,function(e,t){return\"symbol\"===l(t)?String(t):t});return new i(\"Invalid \"+o+\" `\"+c+\"` of value `\"+String(u)+\"` supplied to `\"+n+\"`, expected one of \"+f+\".\")}return c(t)},oneOfType:function(e){if(!Array.isArray(e))return true&&z(\"Invalid argument supplied to oneOfType, expected an instance of array.\"),q;for(var t=0;t<e.length;t++){var r=e[t];if(\"function\"!=typeof r)return z(\"Invalid argument supplied to oneOfType. Expected an array of check functions, but received \"+y(r)+\" at index \"+t+\".\"),q}return c(function(t,r,n,o,a){for(var c=[],u=0;u<e.length;u++){var s=(0,e[u])(t,r,n,o,a,R);if(null==s)return null;s.data&&A(s.data,\"expectedType\")&&c.push(s.data.expectedType)}return new i(\"Invalid \"+o+\" `\"+a+\"` supplied to `\"+n+\"`\"+(c.length>0?\", expected one of type [\"+c.join(\", \")+\"]\":\"\")+\".\")})},shape:function(e){return c(function(t,r,n,o,a){var c=t[r],u=p(c);if(\"object\"!==u)return new i(\"Invalid \"+o+\" `\"+a+\"` of type `\"+u+\"` supplied to `\"+n+\"`, expected `object`.\");for(var f in e){var y=e[f];if(\"function\"!=typeof y)return s(n,o,a,f,l(y));var d=y(c,f,n,o,a+\".\"+f,R);if(d)return d}return null})},exact:function(e){return c(function(t,r,n,o,a){var c=t[r],u=p(c);if(\"object\"!==u)return new i(\"Invalid \"+o+\" `\"+a+\"` of type `\"+u+\"` supplied to `\"+n+\"`, expected `object`.\");var f=N({},t[r],e);for(var y in f){var d=e[y];if(A(e,y)&&\"function\"!=typeof d)return s(n,o,a,y,l(d));if(!d)return new i(\"Invalid \"+o+\" `\"+a+\"` key `\"+y+\"` supplied to `\"+n+\"`.\\nBad object: \"+JSON.stringify(t[r],null,\"  \")+\"\\nValid keys: \"+JSON.stringify(Object.keys(e),null,\"  \"));var m=d(c,y,n,o,a+\".\"+y,R);if(m)return m}return null})}};function a(e,t){return e===t?0!==e||1/e==1/t:e!=e&&t!=t}function i(e,t){this.message=e,this.data=t&&\"object\"==typeof t?t:{},this.stack=\"\"}function c(e){function t(t,r,o,a,c,u,s){if(a=a||n,u=u||o,s!==R){var f=new Error(\"Calling PropTypes validators directly is not supported by the `prop-types` package. Use `PropTypes.checkPropTypes()` to call them. Read more at http://fb.me/use-check-prop-types\");throw f.name=\"Invariant Violation\",f}return null==r[o]?t?new i(null===r[o]?\"The \"+c+\" `\"+u+\"` is marked as required in `\"+a+\"`, but its value is `null`.\":\"The \"+c+\" `\"+u+\"` is marked as required in `\"+a+\"`, but its value is `undefined`.\"):null:e(r,o,a,c,u)}process;var r=t.bind(null,!1);return r.isRequired=t.bind(null,!0),r}function u(e){return c(function(t,r,n,o,a,c){var u=t[r];return p(u)!==e?new i(\"Invalid \"+o+\" `\"+a+\"` of type `\"+l(u)+\"` supplied to `\"+n+\"`, expected `\"+e+\"`.\",{expectedType:e}):null})}function s(e,t,r,n,o){return new i((e||\"React class\")+\": \"+t+\" type `\"+r+\".\"+n+\"` is invalid; it must be a function, usually from the `prop-types` package, but received `\"+o+\"`.\")}function f(t){switch(typeof t){case\"number\":case\"string\":case\"undefined\":return!0;case\"boolean\":return!t;case\"object\":if(Array.isArray(t))return t.every(f);if(null===t||e(t))return!0;var n=function(e){var t=e&&(r&&e[r]||e[\"@@iterator\"]);if(\"function\"==typeof t)return t}(t);if(!n)return!1;var o,a=n.call(t);if(n!==t.entries){for(;!(o=a.next()).done;)if(!f(o.value))return!1}else for(;!(o=a.next()).done;){var i=o.value;if(i&&!f(i[1]))return!1}return!0;default:return!1}}function p(e){var t=typeof e;return Array.isArray(e)?\"array\":e instanceof RegExp?\"object\":function(e,t){return\"symbol\"===e||!!t&&(\"Symbol\"===t[\"@@toStringTag\"]||\"function\"==typeof Symbol&&t instanceof Symbol)}(t,e)?\"symbol\":t}function l(e){if(null==e)return\"\"+e;var t=p(e);if(\"object\"===t){if(e instanceof Date)return\"date\";if(e instanceof RegExp)return\"regexp\"}return t}function y(e){var t=l(e);switch(t){case\"array\":case\"object\":return\"an \"+t;case\"boolean\":case\"date\":case\"regexp\":return\"a \"+t;default:return t}}return i.prototype=Error.prototype,o.checkPropTypes=W,o.resetWarningCache=W.resetWarningCache,o.PropTypes=o,o}($.isElement):0}),H=[\"tweetId\",\"onTweetLoadError\",\"onTweetLoadSuccess\",\"options\",\"children\",\"placeholder\",\"protocol\"],Y=[],G=/*#__PURE__*/function(n){var o,a;function i(){for(var e,t=arguments.length,r=new Array(t),o=0;o<t;o++)r[o]=arguments[o];return(e=n.call.apply(n,[this].concat(r))||this)._div=void 0,e.state={isLoading:!0},e}a=n,(o=i).prototype=Object.create(a.prototype),o.prototype.constructor=o,r(o,a);var c=i.prototype;return c.loadTweetForProps=function(e){var t=this,r=function(){window.twttr.ready().then(function(r){var n=r.widgets;t._div&&(t._div.innerHTML=\"\");var o=e.onTweetLoadSuccess,a=e.onTweetLoadError;n.createTweetEmbed(t.props.tweetId,t._div,e.options).then(function(e){t.setState({isLoading:!1}),o&&o(e)}).catch(a)})},n=window.twttr;n&&n.ready?r():function(e,t){if(0===Y.length){Y.push(t);var r=document.createElement(\"script\");r.setAttribute(\"src\",e),r.onload=function(){return Y.forEach(function(e){return e()})},document.body.appendChild(r)}else Y.push(t)}((window.location.protocol.indexOf(\"file\")>=0?this.props.protocol:\"\")+\"//platform.twitter.com/widgets.js\",r)},c.componentDidMount=function(){this.loadTweetForProps(this.props)},c.shouldComponentUpdate=function(e,t){return this.props.tweetId!==e.tweetId||this.props.className!==e.className},c.componentWillUpdate=function(e,t){this.props.tweetId!==e.tweetId&&this.loadTweetForProps(e)},c.render=function(){var r=this,n=this.props,o=this.state,a=function(e,t){if(null==e)return{};var r,n,o={},a=Object.keys(e);for(n=0;n<a.length;n++)t.indexOf(r=a[n])>=0||(o[r]=e[r]);return o}(n,H);return react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"div\",t({},a,{ref:function(e){r._div=e}}),o.isLoading&&n.placeholder)},i}((react__WEBPACK_IMPORTED_MODULE_0___default().Component));G.propTypes={tweetId:B.string,options:B.object,protocol:B.string,onTweetLoadSuccess:B.func,onTweetLoadError:B.func,className:B.string},G.defaultProps={protocol:\"https:\",options:{},className:null};\n//# sourceMappingURL=tweet-embed.es.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/react-tweet-embed/dist/tweet-embed.es.js\n");

/***/ })

};
;